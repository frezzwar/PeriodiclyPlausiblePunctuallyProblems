/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiler.node;

import compiler.analysis.*;

@SuppressWarnings("nls")
public final class AParamaBoolExpr extends PExpr
{
    private TParL _parL_;
    private PExpr _body_;
    private TParR _parR_;
    private PBoolOperator _boolOperator_;
    private PExpr _forllowExpr_;

    public AParamaBoolExpr()
    {
        // Constructor
    }

    public AParamaBoolExpr(
        @SuppressWarnings("hiding") TParL _parL_,
        @SuppressWarnings("hiding") PExpr _body_,
        @SuppressWarnings("hiding") TParR _parR_,
        @SuppressWarnings("hiding") PBoolOperator _boolOperator_,
        @SuppressWarnings("hiding") PExpr _forllowExpr_)
    {
        // Constructor
        setParL(_parL_);

        setBody(_body_);

        setParR(_parR_);

        setBoolOperator(_boolOperator_);

        setForllowExpr(_forllowExpr_);

    }

    @Override
    public Object clone()
    {
        return new AParamaBoolExpr(
            cloneNode(this._parL_),
            cloneNode(this._body_),
            cloneNode(this._parR_),
            cloneNode(this._boolOperator_),
            cloneNode(this._forllowExpr_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParamaBoolExpr(this);
    }

    public TParL getParL()
    {
        return this._parL_;
    }

    public void setParL(TParL node)
    {
        if(this._parL_ != null)
        {
            this._parL_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parL_ = node;
    }

    public PExpr getBody()
    {
        return this._body_;
    }

    public void setBody(PExpr node)
    {
        if(this._body_ != null)
        {
            this._body_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._body_ = node;
    }

    public TParR getParR()
    {
        return this._parR_;
    }

    public void setParR(TParR node)
    {
        if(this._parR_ != null)
        {
            this._parR_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parR_ = node;
    }

    public PBoolOperator getBoolOperator()
    {
        return this._boolOperator_;
    }

    public void setBoolOperator(PBoolOperator node)
    {
        if(this._boolOperator_ != null)
        {
            this._boolOperator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._boolOperator_ = node;
    }

    public PExpr getForllowExpr()
    {
        return this._forllowExpr_;
    }

    public void setForllowExpr(PExpr node)
    {
        if(this._forllowExpr_ != null)
        {
            this._forllowExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._forllowExpr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._parL_)
            + toString(this._body_)
            + toString(this._parR_)
            + toString(this._boolOperator_)
            + toString(this._forllowExpr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._parL_ == child)
        {
            this._parL_ = null;
            return;
        }

        if(this._body_ == child)
        {
            this._body_ = null;
            return;
        }

        if(this._parR_ == child)
        {
            this._parR_ = null;
            return;
        }

        if(this._boolOperator_ == child)
        {
            this._boolOperator_ = null;
            return;
        }

        if(this._forllowExpr_ == child)
        {
            this._forllowExpr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._parL_ == oldChild)
        {
            setParL((TParL) newChild);
            return;
        }

        if(this._body_ == oldChild)
        {
            setBody((PExpr) newChild);
            return;
        }

        if(this._parR_ == oldChild)
        {
            setParR((TParR) newChild);
            return;
        }

        if(this._boolOperator_ == oldChild)
        {
            setBoolOperator((PBoolOperator) newChild);
            return;
        }

        if(this._forllowExpr_ == oldChild)
        {
            setForllowExpr((PExpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
