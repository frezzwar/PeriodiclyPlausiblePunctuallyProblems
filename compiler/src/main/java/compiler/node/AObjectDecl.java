/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiler.node;

import compiler.analysis.*;

@SuppressWarnings("nls")
public final class AObjectDecl extends PObjectDecl
{
    private TNew _new_;
    private TIdentifier _id1_;
    private TAssign _assign_;
    private TFigure _figure_;
    private TParL _parL_;
    private TIdentifier _id2_;
    private TParR _parR_;
    private PBody _body_;

    public AObjectDecl()
    {
        // Constructor
    }

    public AObjectDecl(
        @SuppressWarnings("hiding") TNew _new_,
        @SuppressWarnings("hiding") TIdentifier _id1_,
        @SuppressWarnings("hiding") TAssign _assign_,
        @SuppressWarnings("hiding") TFigure _figure_,
        @SuppressWarnings("hiding") TParL _parL_,
        @SuppressWarnings("hiding") TIdentifier _id2_,
        @SuppressWarnings("hiding") TParR _parR_,
        @SuppressWarnings("hiding") PBody _body_)
    {
        // Constructor
        setNew(_new_);

        setId1(_id1_);

        setAssign(_assign_);

        setFigure(_figure_);

        setParL(_parL_);

        setId2(_id2_);

        setParR(_parR_);

        setBody(_body_);

    }

    @Override
    public Object clone()
    {
        return new AObjectDecl(
            cloneNode(this._new_),
            cloneNode(this._id1_),
            cloneNode(this._assign_),
            cloneNode(this._figure_),
            cloneNode(this._parL_),
            cloneNode(this._id2_),
            cloneNode(this._parR_),
            cloneNode(this._body_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAObjectDecl(this);
    }

    public TNew getNew()
    {
        return this._new_;
    }

    public void setNew(TNew node)
    {
        if(this._new_ != null)
        {
            this._new_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._new_ = node;
    }

    public TIdentifier getId1()
    {
        return this._id1_;
    }

    public void setId1(TIdentifier node)
    {
        if(this._id1_ != null)
        {
            this._id1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id1_ = node;
    }

    public TAssign getAssign()
    {
        return this._assign_;
    }

    public void setAssign(TAssign node)
    {
        if(this._assign_ != null)
        {
            this._assign_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._assign_ = node;
    }

    public TFigure getFigure()
    {
        return this._figure_;
    }

    public void setFigure(TFigure node)
    {
        if(this._figure_ != null)
        {
            this._figure_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._figure_ = node;
    }

    public TParL getParL()
    {
        return this._parL_;
    }

    public void setParL(TParL node)
    {
        if(this._parL_ != null)
        {
            this._parL_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parL_ = node;
    }

    public TIdentifier getId2()
    {
        return this._id2_;
    }

    public void setId2(TIdentifier node)
    {
        if(this._id2_ != null)
        {
            this._id2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id2_ = node;
    }

    public TParR getParR()
    {
        return this._parR_;
    }

    public void setParR(TParR node)
    {
        if(this._parR_ != null)
        {
            this._parR_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parR_ = node;
    }

    public PBody getBody()
    {
        return this._body_;
    }

    public void setBody(PBody node)
    {
        if(this._body_ != null)
        {
            this._body_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._body_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._new_)
            + toString(this._id1_)
            + toString(this._assign_)
            + toString(this._figure_)
            + toString(this._parL_)
            + toString(this._id2_)
            + toString(this._parR_)
            + toString(this._body_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._new_ == child)
        {
            this._new_ = null;
            return;
        }

        if(this._id1_ == child)
        {
            this._id1_ = null;
            return;
        }

        if(this._assign_ == child)
        {
            this._assign_ = null;
            return;
        }

        if(this._figure_ == child)
        {
            this._figure_ = null;
            return;
        }

        if(this._parL_ == child)
        {
            this._parL_ = null;
            return;
        }

        if(this._id2_ == child)
        {
            this._id2_ = null;
            return;
        }

        if(this._parR_ == child)
        {
            this._parR_ = null;
            return;
        }

        if(this._body_ == child)
        {
            this._body_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._new_ == oldChild)
        {
            setNew((TNew) newChild);
            return;
        }

        if(this._id1_ == oldChild)
        {
            setId1((TIdentifier) newChild);
            return;
        }

        if(this._assign_ == oldChild)
        {
            setAssign((TAssign) newChild);
            return;
        }

        if(this._figure_ == oldChild)
        {
            setFigure((TFigure) newChild);
            return;
        }

        if(this._parL_ == oldChild)
        {
            setParL((TParL) newChild);
            return;
        }

        if(this._id2_ == oldChild)
        {
            setId2((TIdentifier) newChild);
            return;
        }

        if(this._parR_ == oldChild)
        {
            setParR((TParR) newChild);
            return;
        }

        if(this._body_ == oldChild)
        {
            setBody((PBody) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
