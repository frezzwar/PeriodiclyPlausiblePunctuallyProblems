/* This file was generated by SableCC (http://www.sablecc.org/). */

package simpleAdder.parser;

import simpleAdder.lexer.*;
import simpleAdder.node.*;
import simpleAdder.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList<Object> listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PDecls node1 = (PDecls) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce ADeclsDecls */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list);
            }
            break;
            case 1: /* reduce ADecls */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list);
            }
            break;
            case 2: /* reduce AVardeclDecl */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list);
            }
            break;
            case 3: /* reduce AEventDecl */
            {
                ArrayList<Object> list = new3();
                push(goTo(1), list);
            }
            break;
            case 4: /* reduce AStmtDecl */
            {
                ArrayList<Object> list = new4();
                push(goTo(1), list);
            }
            break;
            case 5: /* reduce AControlstructureDecl */
            {
                ArrayList<Object> list = new5();
                push(goTo(1), list);
            }
            break;
            case 6: /* reduce AActionDecl */
            {
                ArrayList<Object> list = new6();
                push(goTo(1), list);
            }
            break;
            case 7: /* reduce ARepeatstructureControlstructure */
            {
                ArrayList<Object> list = new7();
                push(goTo(2), list);
            }
            break;
            case 8: /* reduce AAifstructurecontrolstructure1Controlstructure */
            {
                ArrayList<Object> list = new8();
                push(goTo(2), list);
            }
            break;
            case 9: /* reduce AAifstructurecontrolstructure2Controlstructure */
            {
                ArrayList<Object> list = new9();
                push(goTo(2), list);
            }
            break;
            case 10: /* reduce ASwitchstructureControlstructure */
            {
                ArrayList<Object> list = new10();
                push(goTo(2), list);
            }
            break;
            case 11: /* reduce AAswitchcase1Switchcase */
            {
                ArrayList<Object> list = new11();
                push(goTo(3), list);
            }
            break;
            case 12: /* reduce AAswitchcase2Switchcase */
            {
                ArrayList<Object> list = new12();
                push(goTo(3), list);
            }
            break;
            case 13: /* reduce AAswitchcase3Switchcase */
            {
                ArrayList<Object> list = new13();
                push(goTo(3), list);
            }
            break;
            case 14: /* reduce AAswitchcase4Switchcase */
            {
                ArrayList<Object> list = new14();
                push(goTo(3), list);
            }
            break;
            case 15: /* reduce AAswitchcase5Switchcase */
            {
                ArrayList<Object> list = new15();
                push(goTo(3), list);
            }
            break;
            case 16: /* reduce AAswitchcase6Switchcase */
            {
                ArrayList<Object> list = new16();
                push(goTo(3), list);
            }
            break;
            case 17: /* reduce AAswitchcase7Switchcase */
            {
                ArrayList<Object> list = new17();
                push(goTo(3), list);
            }
            break;
            case 18: /* reduce AAswitchcase8Switchcase */
            {
                ArrayList<Object> list = new18();
                push(goTo(3), list);
            }
            break;
            case 19: /* reduce AElsestructureElsestructure */
            {
                ArrayList<Object> list = new19();
                push(goTo(4), list);
            }
            break;
            case 20: /* reduce ARepeatwhileRepeatstructure */
            {
                ArrayList<Object> list = new20();
                push(goTo(5), list);
            }
            break;
            case 21: /* reduce AAidrepeatstructure1$Identifier1Repeatstructure */
            {
                ArrayList<Object> list = new21();
                push(goTo(5), list);
            }
            break;
            case 22: /* reduce AAidrepeatstructure1$Literal1Repeatstructure */
            {
                ArrayList<Object> list = new22();
                push(goTo(5), list);
            }
            break;
            case 23: /* reduce AAidrepeatstructure1$Rnd1Repeatstructure */
            {
                ArrayList<Object> list = new23();
                push(goTo(5), list);
            }
            break;
            case 24: /* reduce AAidrepeatstructure2$Identifier1Repeatstructure */
            {
                ArrayList<Object> list = new24();
                push(goTo(5), list);
            }
            break;
            case 25: /* reduce AAidrepeatstructure2$Literal1Repeatstructure */
            {
                ArrayList<Object> list = new25();
                push(goTo(5), list);
            }
            break;
            case 26: /* reduce AAidrepeatstructure2$Rnd1Repeatstructure */
            {
                ArrayList<Object> list = new26();
                push(goTo(5), list);
            }
            break;
            case 27: /* reduce AAidrepeatstructure3$Identifier1Repeatstructure */
            {
                ArrayList<Object> list = new27();
                push(goTo(5), list);
            }
            break;
            case 28: /* reduce AAidrepeatstructure3$Literal1Repeatstructure */
            {
                ArrayList<Object> list = new28();
                push(goTo(5), list);
            }
            break;
            case 29: /* reduce AAidrepeatstructure3$Rnd1Repeatstructure */
            {
                ArrayList<Object> list = new29();
                push(goTo(5), list);
            }
            break;
            case 30: /* reduce AAidrepeatstructure4$Identifier1Repeatstructure */
            {
                ArrayList<Object> list = new30();
                push(goTo(5), list);
            }
            break;
            case 31: /* reduce AAidrepeatstructure4$Literal1Repeatstructure */
            {
                ArrayList<Object> list = new31();
                push(goTo(5), list);
            }
            break;
            case 32: /* reduce AAidrepeatstructure4$Rnd1Repeatstructure */
            {
                ArrayList<Object> list = new32();
                push(goTo(5), list);
            }
            break;
            case 33: /* reduce ARepeatstructure */
            {
                ArrayList<Object> list = new33();
                push(goTo(5), list);
            }
            break;
            case 34: /* reduce AStartupEvent */
            {
                ArrayList<Object> list = new34();
                push(goTo(6), list);
            }
            break;
            case 35: /* reduce ASingleVarDecls$Identifier1Vardecl */
            {
                ArrayList<Object> list = new35();
                push(goTo(7), list);
            }
            break;
            case 36: /* reduce ASingleVarDecls$Literal1Vardecl */
            {
                ArrayList<Object> list = new36();
                push(goTo(7), list);
            }
            break;
            case 37: /* reduce ASingleVarDecls$Rnd1Vardecl */
            {
                ArrayList<Object> list = new37();
                push(goTo(7), list);
            }
            break;
            case 38: /* reduce AAlistvardecl1Vardecl */
            {
                ArrayList<Object> list = new38();
                push(goTo(7), list);
            }
            break;
            case 39: /* reduce AAlistvardecl2$Identifier1Vardecl */
            {
                ArrayList<Object> list = new39();
                push(goTo(7), list);
            }
            break;
            case 40: /* reduce AAlistvardecl2$Literal1Vardecl */
            {
                ArrayList<Object> list = new40();
                push(goTo(7), list);
            }
            break;
            case 41: /* reduce AAlistvardecl2$Rnd1Vardecl */
            {
                ArrayList<Object> list = new41();
                push(goTo(7), list);
            }
            break;
            case 42: /* reduce ASayAction */
            {
                ArrayList<Object> list = new42();
                push(goTo(8), list);
            }
            break;
            case 43: /* reduce AThinkAction */
            {
                ArrayList<Object> list = new43();
                push(goTo(8), list);
            }
            break;
            case 44: /* reduce AOption1Actionsay */
            {
                ArrayList<Object> list = new44();
                push(goTo(9), list);
            }
            break;
            case 45: /* reduce AOption2$Identifier1Actionsay */
            {
                ArrayList<Object> list = new45();
                push(goTo(9), list);
            }
            break;
            case 46: /* reduce AOption2$Literal1Actionsay */
            {
                ArrayList<Object> list = new46();
                push(goTo(9), list);
            }
            break;
            case 47: /* reduce AOption2$Rnd1Actionsay */
            {
                ArrayList<Object> list = new47();
                push(goTo(9), list);
            }
            break;
            case 48: /* reduce AOption1Actionthink */
            {
                ArrayList<Object> list = new48();
                push(goTo(10), list);
            }
            break;
            case 49: /* reduce AOption2$Identifier1Actionthink */
            {
                ArrayList<Object> list = new49();
                push(goTo(10), list);
            }
            break;
            case 50: /* reduce AOption2$Literal1Actionthink */
            {
                ArrayList<Object> list = new50();
                push(goTo(10), list);
            }
            break;
            case 51: /* reduce AOption2$Rnd1Actionthink */
            {
                ArrayList<Object> list = new51();
                push(goTo(10), list);
            }
            break;
            case 52: /* reduce APlus$Identifier1Printstmt */
            {
                ArrayList<Object> list = new52();
                push(goTo(11), list);
            }
            break;
            case 53: /* reduce APlus$Literal1Printstmt */
            {
                ArrayList<Object> list = new53();
                push(goTo(11), list);
            }
            break;
            case 54: /* reduce APlus$Rnd1Printstmt */
            {
                ArrayList<Object> list = new54();
                push(goTo(11), list);
            }
            break;
            case 55: /* reduce AVal$Identifier1Printstmt */
            {
                ArrayList<Object> list = new55();
                push(goTo(11), list);
            }
            break;
            case 56: /* reduce AVal$Literal1Printstmt */
            {
                ArrayList<Object> list = new56();
                push(goTo(11), list);
            }
            break;
            case 57: /* reduce AVal$Rnd1Printstmt */
            {
                ArrayList<Object> list = new57();
                push(goTo(11), list);
            }
            break;
            case 58: /* reduce AListvariables$Identifier1Listvariables */
            {
                ArrayList<Object> list = new58();
                push(goTo(12), list);
            }
            break;
            case 59: /* reduce AListvariables$Literal1Listvariables */
            {
                ArrayList<Object> list = new59();
                push(goTo(12), list);
            }
            break;
            case 60: /* reduce AListvariables$Rnd1Listvariables */
            {
                ArrayList<Object> list = new60();
                push(goTo(12), list);
            }
            break;
            case 61: /* reduce AListvariables */
            {
                ArrayList<Object> list = new61();
                push(goTo(12), list);
            }
            break;
            case 62: /* reduce AList$Identifier1$Identifier2Stmt */
            {
                ArrayList<Object> list = new62();
                push(goTo(13), list);
            }
            break;
            case 63: /* reduce AList$Identifier1$Literal2Stmt */
            {
                ArrayList<Object> list = new63();
                push(goTo(13), list);
            }
            break;
            case 64: /* reduce AList$Identifier1$Rnd2Stmt */
            {
                ArrayList<Object> list = new64();
                push(goTo(13), list);
            }
            break;
            case 65: /* reduce AList$Literal1$Identifier2Stmt */
            {
                ArrayList<Object> list = new65();
                push(goTo(13), list);
            }
            break;
            case 66: /* reduce AList$Literal1$Literal2Stmt */
            {
                ArrayList<Object> list = new66();
                push(goTo(13), list);
            }
            break;
            case 67: /* reduce AList$Literal1$Rnd2Stmt */
            {
                ArrayList<Object> list = new67();
                push(goTo(13), list);
            }
            break;
            case 68: /* reduce AList$Rnd1$Identifier2Stmt */
            {
                ArrayList<Object> list = new68();
                push(goTo(13), list);
            }
            break;
            case 69: /* reduce AList$Rnd1$Literal2Stmt */
            {
                ArrayList<Object> list = new69();
                push(goTo(13), list);
            }
            break;
            case 70: /* reduce AList$Rnd1$Rnd2Stmt */
            {
                ArrayList<Object> list = new70();
                push(goTo(13), list);
            }
            break;
            case 71: /* reduce AAddStmt */
            {
                ArrayList<Object> list = new71();
                push(goTo(13), list);
            }
            break;
            case 72: /* reduce AExprExpr */
            {
                ArrayList<Object> list = new72();
                push(goTo(14), list);
            }
            break;
            case 73: /* reduce AOpassignExpr */
            {
                ArrayList<Object> list = new73();
                push(goTo(14), list);
            }
            break;
            case 74: /* reduce AOpassign1Opassign */
            {
                ArrayList<Object> list = new74();
                push(goTo(15), list);
            }
            break;
            case 75: /* reduce AOpassign2Opassign */
            {
                ArrayList<Object> list = new75();
                push(goTo(15), list);
            }
            break;
            case 76: /* reduce AOpassign3Opassign */
            {
                ArrayList<Object> list = new76();
                push(goTo(15), list);
            }
            break;
            case 77: /* reduce AOporOpassign */
            {
                ArrayList<Object> list = new77();
                push(goTo(15), list);
            }
            break;
            case 78: /* reduce AOporOpor */
            {
                ArrayList<Object> list = new78();
                push(goTo(16), list);
            }
            break;
            case 79: /* reduce AOpandOpor */
            {
                ArrayList<Object> list = new79();
                push(goTo(16), list);
            }
            break;
            case 80: /* reduce AOpandOpand */
            {
                ArrayList<Object> list = new80();
                push(goTo(17), list);
            }
            break;
            case 81: /* reduce AOpcompareOpand */
            {
                ArrayList<Object> list = new81();
                push(goTo(17), list);
            }
            break;
            case 82: /* reduce AOpcompare1$Identifier1Opcompare */
            {
                ArrayList<Object> list = new82();
                push(goTo(18), list);
            }
            break;
            case 83: /* reduce AOpcompare1$Literal1Opcompare */
            {
                ArrayList<Object> list = new83();
                push(goTo(18), list);
            }
            break;
            case 84: /* reduce AOpcompare1$Rnd1Opcompare */
            {
                ArrayList<Object> list = new84();
                push(goTo(18), list);
            }
            break;
            case 85: /* reduce AOpcompare2$Identifier1Opcompare */
            {
                ArrayList<Object> list = new85();
                push(goTo(18), list);
            }
            break;
            case 86: /* reduce AOpcompare2$Literal1Opcompare */
            {
                ArrayList<Object> list = new86();
                push(goTo(18), list);
            }
            break;
            case 87: /* reduce AOpcompare2$Rnd1Opcompare */
            {
                ArrayList<Object> list = new87();
                push(goTo(18), list);
            }
            break;
            case 88: /* reduce AOpcompare3$Identifier1Opcompare */
            {
                ArrayList<Object> list = new88();
                push(goTo(18), list);
            }
            break;
            case 89: /* reduce AOpcompare3$Literal1Opcompare */
            {
                ArrayList<Object> list = new89();
                push(goTo(18), list);
            }
            break;
            case 90: /* reduce AOpcompare3$Rnd1Opcompare */
            {
                ArrayList<Object> list = new90();
                push(goTo(18), list);
            }
            break;
            case 91: /* reduce AOpcompare4$Identifier1Opcompare */
            {
                ArrayList<Object> list = new91();
                push(goTo(18), list);
            }
            break;
            case 92: /* reduce AOpcompare4$Literal1Opcompare */
            {
                ArrayList<Object> list = new92();
                push(goTo(18), list);
            }
            break;
            case 93: /* reduce AOpcompare4$Rnd1Opcompare */
            {
                ArrayList<Object> list = new93();
                push(goTo(18), list);
            }
            break;
            case 94: /* reduce AValue$Identifier1Opcompare */
            {
                ArrayList<Object> list = new94();
                push(goTo(18), list);
            }
            break;
            case 95: /* reduce AValue$Literal1Opcompare */
            {
                ArrayList<Object> list = new95();
                push(goTo(18), list);
            }
            break;
            case 96: /* reduce AValue$Rnd1Opcompare */
            {
                ArrayList<Object> list = new96();
                push(goTo(18), list);
            }
            break;
            case 97: /* reduce ALessEqualCompareToken */
            {
                ArrayList<Object> list = new97();
                push(goTo(19), list);
            }
            break;
            case 98: /* reduce ALessCompareToken */
            {
                ArrayList<Object> list = new98();
                push(goTo(19), list);
            }
            break;
            case 99: /* reduce AGreaterEqualCompareToken */
            {
                ArrayList<Object> list = new99();
                push(goTo(19), list);
            }
            break;
            case 100: /* reduce AGreaterCompareToken */
            {
                ArrayList<Object> list = new100();
                push(goTo(19), list);
            }
            break;
            case 101: /* reduce AMinus$Identifier1Operator */
            {
                ArrayList<Object> list = new101();
                push(goTo(20), list);
            }
            break;
            case 102: /* reduce AMinus$Literal1Operator */
            {
                ArrayList<Object> list = new102();
                push(goTo(20), list);
            }
            break;
            case 103: /* reduce AMinus$Rnd1Operator */
            {
                ArrayList<Object> list = new103();
                push(goTo(20), list);
            }
            break;
            case 104: /* reduce APlus$Identifier1Operator */
            {
                ArrayList<Object> list = new104();
                push(goTo(20), list);
            }
            break;
            case 105: /* reduce APlus$Literal1Operator */
            {
                ArrayList<Object> list = new105();
                push(goTo(20), list);
            }
            break;
            case 106: /* reduce APlus$Rnd1Operator */
            {
                ArrayList<Object> list = new106();
                push(goTo(20), list);
            }
            break;
            case 107: /* reduce AMult$Identifier1Operator */
            {
                ArrayList<Object> list = new107();
                push(goTo(20), list);
            }
            break;
            case 108: /* reduce AMult$Literal1Operator */
            {
                ArrayList<Object> list = new108();
                push(goTo(20), list);
            }
            break;
            case 109: /* reduce AMult$Rnd1Operator */
            {
                ArrayList<Object> list = new109();
                push(goTo(20), list);
            }
            break;
            case 110: /* reduce ADiv$Identifier1Operator */
            {
                ArrayList<Object> list = new110();
                push(goTo(20), list);
            }
            break;
            case 111: /* reduce ADiv$Literal1Operator */
            {
                ArrayList<Object> list = new111();
                push(goTo(20), list);
            }
            break;
            case 112: /* reduce ADiv$Rnd1Operator */
            {
                ArrayList<Object> list = new112();
                push(goTo(20), list);
            }
            break;
            case 113: /* reduce AEqualBoolOperator */
            {
                ArrayList<Object> list = new113();
                push(goTo(21), list);
            }
            break;
            case 114: /* reduce ALessEqualBoolOperator */
            {
                ArrayList<Object> list = new114();
                push(goTo(21), list);
            }
            break;
            case 115: /* reduce AGreaterEqualBoolOperator */
            {
                ArrayList<Object> list = new115();
                push(goTo(21), list);
            }
            break;
            case 116: /* reduce ANegateBoolOperator */
            {
                ArrayList<Object> list = new116();
                push(goTo(21), list);
            }
            break;
            case 117: /* reduce AAndBoolOperator */
            {
                ArrayList<Object> list = new117();
                push(goTo(21), list);
            }
            break;
            case 118: /* reduce AOrBoolOperator */
            {
                ArrayList<Object> list = new118();
                push(goTo(21), list);
            }
            break;
            case 119: /* reduce ALessBoolOperator */
            {
                ArrayList<Object> list = new119();
                push(goTo(21), list);
            }
            break;
            case 120: /* reduce AGreaterBoolOperator */
            {
                ArrayList<Object> list = new120();
                push(goTo(21), list);
            }
            break;
            case 121: /* reduce AIdentifier1$Identifier2Rnd */
            {
                ArrayList<Object> list = new121();
                push(goTo(22), list);
            }
            break;
            case 122: /* reduce AIdentifier1$Literal2Rnd */
            {
                ArrayList<Object> list = new122();
                push(goTo(22), list);
            }
            break;
            case 123: /* reduce AIdentifier1$Rnd2Rnd */
            {
                ArrayList<Object> list = new123();
                push(goTo(22), list);
            }
            break;
            case 124: /* reduce ALiteral1$Identifier2Rnd */
            {
                ArrayList<Object> list = new124();
                push(goTo(22), list);
            }
            break;
            case 125: /* reduce ALiteral1$Literal2Rnd */
            {
                ArrayList<Object> list = new125();
                push(goTo(22), list);
            }
            break;
            case 126: /* reduce ALiteral1$Rnd2Rnd */
            {
                ArrayList<Object> list = new126();
                push(goTo(22), list);
            }
            break;
            case 127: /* reduce ARnd1$Identifier2Rnd */
            {
                ArrayList<Object> list = new127();
                push(goTo(22), list);
            }
            break;
            case 128: /* reduce ARnd1$Literal2Rnd */
            {
                ArrayList<Object> list = new128();
                push(goTo(22), list);
            }
            break;
            case 129: /* reduce ARnd1$Rnd2Rnd */
            {
                ArrayList<Object> list = new129();
                push(goTo(22), list);
            }
            break;
            case 130: /* reduce ABooleanLiteralLiteral */
            {
                ArrayList<Object> list = new130();
                push(goTo(23), list);
            }
            break;
            case 131: /* reduce AIntegerLiteralLiteral */
            {
                ArrayList<Object> list = new131();
                push(goTo(23), list);
            }
            break;
            case 132: /* reduce ADoubleLiteralLiteral */
            {
                ArrayList<Object> list = new132();
                push(goTo(23), list);
            }
            break;
            case 133: /* reduce AStringLiteralLiteral */
            {
                ArrayList<Object> list = new133();
                push(goTo(23), list);
            }
            break;
            case 134: /* reduce ATrueBooleanLiteral */
            {
                ArrayList<Object> list = new134();
                push(goTo(24), list);
            }
            break;
            case 135: /* reduce AFalseBooleanLiteral */
            {
                ArrayList<Object> list = new135();
                push(goTo(24), list);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce ADeclsDecls */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecls pdeclsNode1;
        {
            // Block
        PDecl pdeclNode2;
        PDecls pdeclsNode3;
        pdeclNode2 = (PDecl)nodeArrayList1.get(0);
        pdeclsNode3 = (PDecls)nodeArrayList2.get(0);

        pdeclsNode1 = new ADeclsDecls(pdeclNode2, pdeclsNode3);
        }
	nodeList.add(pdeclsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce ADecls */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PDecls pdeclsNode1;
        {
            // Block

        pdeclsNode1 = new ADecls();
        }
	nodeList.add(pdeclsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AVardeclDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecl pdeclNode1;
        {
            // Block
        PVardecl pvardeclNode2;
        pvardeclNode2 = (PVardecl)nodeArrayList1.get(0);

        pdeclNode1 = new AVardeclDecl(pvardeclNode2);
        }
	nodeList.add(pdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AEventDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecl pdeclNode1;
        {
            // Block
        PEvent peventNode2;
        peventNode2 = (PEvent)nodeArrayList1.get(0);

        pdeclNode1 = new AEventDecl(peventNode2);
        }
	nodeList.add(pdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AStmtDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecl pdeclNode1;
        {
            // Block
        PStmt pstmtNode2;
        pstmtNode2 = (PStmt)nodeArrayList1.get(0);

        pdeclNode1 = new AStmtDecl(pstmtNode2);
        }
	nodeList.add(pdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AControlstructureDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecl pdeclNode1;
        {
            // Block
        PControlstructure pcontrolstructureNode2;
        pcontrolstructureNode2 = (PControlstructure)nodeArrayList1.get(0);

        pdeclNode1 = new AControlstructureDecl(pcontrolstructureNode2);
        }
	nodeList.add(pdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AActionDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecl pdeclNode1;
        {
            // Block
        PAction pactionNode2;
        pactionNode2 = (PAction)nodeArrayList1.get(0);

        pdeclNode1 = new AActionDecl(pactionNode2);
        }
	nodeList.add(pdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce ARepeatstructureControlstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PControlstructure pcontrolstructureNode1;
        {
            // Block
        TRepeat trepeatNode2;
        PRepeatstructure prepeatstructureNode3;
        trepeatNode2 = (TRepeat)nodeArrayList1.get(0);
        prepeatstructureNode3 = (PRepeatstructure)nodeArrayList2.get(0);

        pcontrolstructureNode1 = new ARepeatstructureControlstructure(trepeatNode2, prepeatstructureNode3);
        }
	nodeList.add(pcontrolstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AAifstructurecontrolstructure1Controlstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PControlstructure pcontrolstructureNode1;
        {
            // Block
        TIf tifNode2;
        TParL tparlNode3;
        PExpr pexprNode4;
        TParR tparrNode5;
        TCurlyL tcurlylNode6;
        PDecls pdeclsNode7;
        TCurlyR tcurlyrNode8;
        @SuppressWarnings("unused") Object nullNode9 = null;
        tifNode2 = (TIf)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        tparrNode5 = (TParR)nodeArrayList4.get(0);
        tcurlylNode6 = (TCurlyL)nodeArrayList5.get(0);
        pdeclsNode7 = (PDecls)nodeArrayList6.get(0);
        tcurlyrNode8 = (TCurlyR)nodeArrayList7.get(0);

        pcontrolstructureNode1 = new AIfstructureControlstructure(tifNode2, tparlNode3, pexprNode4, tparrNode5, tcurlylNode6, pdeclsNode7, tcurlyrNode8, null);
        }
	nodeList.add(pcontrolstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AAifstructurecontrolstructure2Controlstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PControlstructure pcontrolstructureNode1;
        {
            // Block
        TIf tifNode2;
        TParL tparlNode3;
        PExpr pexprNode4;
        TParR tparrNode5;
        TCurlyL tcurlylNode6;
        PDecls pdeclsNode7;
        TCurlyR tcurlyrNode8;
        PElsestructure pelsestructureNode9;
        tifNode2 = (TIf)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        tparrNode5 = (TParR)nodeArrayList4.get(0);
        tcurlylNode6 = (TCurlyL)nodeArrayList5.get(0);
        pdeclsNode7 = (PDecls)nodeArrayList6.get(0);
        tcurlyrNode8 = (TCurlyR)nodeArrayList7.get(0);
        pelsestructureNode9 = (PElsestructure)nodeArrayList8.get(0);

        pcontrolstructureNode1 = new AIfstructureControlstructure(tifNode2, tparlNode3, pexprNode4, tparrNode5, tcurlylNode6, pdeclsNode7, tcurlyrNode8, pelsestructureNode9);
        }
	nodeList.add(pcontrolstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce ASwitchstructureControlstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PControlstructure pcontrolstructureNode1;
        {
            // Block
        TSwitch tswitchNode2;
        TParL tparlNode3;
        PExpr pexprNode4;
        TParR tparrNode5;
        TCurlyL tcurlylNode6;
        PSwitchcase pswitchcaseNode7;
        TCurlyR tcurlyrNode8;
        tswitchNode2 = (TSwitch)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        tparrNode5 = (TParR)nodeArrayList4.get(0);
        tcurlylNode6 = (TCurlyL)nodeArrayList5.get(0);
        pswitchcaseNode7 = (PSwitchcase)nodeArrayList6.get(0);
        tcurlyrNode8 = (TCurlyR)nodeArrayList7.get(0);

        pcontrolstructureNode1 = new ASwitchstructureControlstructure(tswitchNode2, tparlNode3, pexprNode4, tparrNode5, tcurlylNode6, pswitchcaseNode7, tcurlyrNode8);
        }
	nodeList.add(pcontrolstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AAswitchcase1Switchcase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSwitchcase pswitchcaseNode1;
        {
            // Block
        TCase tcaseNode2;
        TParL tparlNode3;
        PExpr pexprNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        @SuppressWarnings("unused") Object nullNode11 = null;
        tcaseNode2 = (TCase)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        tparrNode7 = (TParR)nodeArrayList4.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList5.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList6.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList7.get(0);

        pswitchcaseNode1 = new ASwitchcase(tcaseNode2, tparlNode3, pexprNode4, null, null, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10, null);
        }
	nodeList.add(pswitchcaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AAswitchcase2Switchcase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSwitchcase pswitchcaseNode1;
        {
            // Block
        TCase tcaseNode2;
        TParL tparlNode3;
        PExpr pexprNode4;
        TTo ttoNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        @SuppressWarnings("unused") Object nullNode11 = null;
        tcaseNode2 = (TCase)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        ttoNode5 = (TTo)nodeArrayList4.get(0);
        tparrNode7 = (TParR)nodeArrayList5.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList6.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList7.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList8.get(0);

        pswitchcaseNode1 = new ASwitchcase(tcaseNode2, tparlNode3, pexprNode4, ttoNode5, null, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10, null);
        }
	nodeList.add(pswitchcaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AAswitchcase3Switchcase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSwitchcase pswitchcaseNode1;
        {
            // Block
        TCase tcaseNode2;
        TParL tparlNode3;
        PExpr pexprNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PExpr pexprNode6;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        @SuppressWarnings("unused") Object nullNode11 = null;
        tcaseNode2 = (TCase)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        pexprNode6 = (PExpr)nodeArrayList4.get(0);
        tparrNode7 = (TParR)nodeArrayList5.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList6.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList7.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList8.get(0);

        pswitchcaseNode1 = new ASwitchcase(tcaseNode2, tparlNode3, pexprNode4, null, pexprNode6, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10, null);
        }
	nodeList.add(pswitchcaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AAswitchcase4Switchcase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSwitchcase pswitchcaseNode1;
        {
            // Block
        TCase tcaseNode2;
        TParL tparlNode3;
        PExpr pexprNode4;
        TTo ttoNode5;
        PExpr pexprNode6;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        @SuppressWarnings("unused") Object nullNode11 = null;
        tcaseNode2 = (TCase)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        ttoNode5 = (TTo)nodeArrayList4.get(0);
        pexprNode6 = (PExpr)nodeArrayList5.get(0);
        tparrNode7 = (TParR)nodeArrayList6.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList7.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList8.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList9.get(0);

        pswitchcaseNode1 = new ASwitchcase(tcaseNode2, tparlNode3, pexprNode4, ttoNode5, pexprNode6, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10, null);
        }
	nodeList.add(pswitchcaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AAswitchcase5Switchcase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSwitchcase pswitchcaseNode1;
        {
            // Block
        TCase tcaseNode2;
        TParL tparlNode3;
        PExpr pexprNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        PSwitchcase pswitchcaseNode11;
        tcaseNode2 = (TCase)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        tparrNode7 = (TParR)nodeArrayList4.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList5.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList6.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList7.get(0);
        pswitchcaseNode11 = (PSwitchcase)nodeArrayList8.get(0);

        pswitchcaseNode1 = new ASwitchcase(tcaseNode2, tparlNode3, pexprNode4, null, null, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10, pswitchcaseNode11);
        }
	nodeList.add(pswitchcaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AAswitchcase6Switchcase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSwitchcase pswitchcaseNode1;
        {
            // Block
        TCase tcaseNode2;
        TParL tparlNode3;
        PExpr pexprNode4;
        TTo ttoNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        PSwitchcase pswitchcaseNode11;
        tcaseNode2 = (TCase)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        ttoNode5 = (TTo)nodeArrayList4.get(0);
        tparrNode7 = (TParR)nodeArrayList5.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList6.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList7.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList8.get(0);
        pswitchcaseNode11 = (PSwitchcase)nodeArrayList9.get(0);

        pswitchcaseNode1 = new ASwitchcase(tcaseNode2, tparlNode3, pexprNode4, ttoNode5, null, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10, pswitchcaseNode11);
        }
	nodeList.add(pswitchcaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AAswitchcase7Switchcase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSwitchcase pswitchcaseNode1;
        {
            // Block
        TCase tcaseNode2;
        TParL tparlNode3;
        PExpr pexprNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PExpr pexprNode6;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        PSwitchcase pswitchcaseNode11;
        tcaseNode2 = (TCase)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        pexprNode6 = (PExpr)nodeArrayList4.get(0);
        tparrNode7 = (TParR)nodeArrayList5.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList6.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList7.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList8.get(0);
        pswitchcaseNode11 = (PSwitchcase)nodeArrayList9.get(0);

        pswitchcaseNode1 = new ASwitchcase(tcaseNode2, tparlNode3, pexprNode4, null, pexprNode6, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10, pswitchcaseNode11);
        }
	nodeList.add(pswitchcaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AAswitchcase8Switchcase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSwitchcase pswitchcaseNode1;
        {
            // Block
        TCase tcaseNode2;
        TParL tparlNode3;
        PExpr pexprNode4;
        TTo ttoNode5;
        PExpr pexprNode6;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        PSwitchcase pswitchcaseNode11;
        tcaseNode2 = (TCase)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        ttoNode5 = (TTo)nodeArrayList4.get(0);
        pexprNode6 = (PExpr)nodeArrayList5.get(0);
        tparrNode7 = (TParR)nodeArrayList6.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList7.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList8.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList9.get(0);
        pswitchcaseNode11 = (PSwitchcase)nodeArrayList10.get(0);

        pswitchcaseNode1 = new ASwitchcase(tcaseNode2, tparlNode3, pexprNode4, ttoNode5, pexprNode6, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10, pswitchcaseNode11);
        }
	nodeList.add(pswitchcaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AElsestructureElsestructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PElsestructure pelsestructureNode1;
        {
            // Block
        TElse telseNode2;
        TIf tifNode3;
        TParL tparlNode4;
        PExpr pexprNode5;
        TParR tparrNode6;
        TCurlyL tcurlylNode7;
        PDecls pdeclsNode8;
        TCurlyR tcurlyrNode9;
        telseNode2 = (TElse)nodeArrayList1.get(0);
        tifNode3 = (TIf)nodeArrayList2.get(0);
        tparlNode4 = (TParL)nodeArrayList3.get(0);
        pexprNode5 = (PExpr)nodeArrayList4.get(0);
        tparrNode6 = (TParR)nodeArrayList5.get(0);
        tcurlylNode7 = (TCurlyL)nodeArrayList6.get(0);
        pdeclsNode8 = (PDecls)nodeArrayList7.get(0);
        tcurlyrNode9 = (TCurlyR)nodeArrayList8.get(0);

        pelsestructureNode1 = new AElsestructureElsestructure(telseNode2, tifNode3, tparlNode4, pexprNode5, tparrNode6, tcurlylNode7, pdeclsNode8, tcurlyrNode9);
        }
	nodeList.add(pelsestructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce ARepeatwhileRepeatstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeatstructure prepeatstructureNode1;
        {
            // Block
        TWhile twhileNode2;
        TParL tparlNode3;
        PExpr pexprNode4;
        TParR tparrNode5;
        TCurlyL tcurlylNode6;
        PDecls pdeclsNode7;
        TCurlyR tcurlyrNode8;
        twhileNode2 = (TWhile)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        tparrNode5 = (TParR)nodeArrayList4.get(0);
        tcurlylNode6 = (TCurlyL)nodeArrayList5.get(0);
        pdeclsNode7 = (PDecls)nodeArrayList6.get(0);
        tcurlyrNode8 = (TCurlyR)nodeArrayList7.get(0);

        prepeatstructureNode1 = new ARepeatwhileRepeatstructure(twhileNode2, tparlNode3, pexprNode4, tparrNode5, tcurlylNode6, pdeclsNode7, tcurlyrNode8);
        }
	nodeList.add(prepeatstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AAidrepeatstructure1$Identifier1Repeatstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeatstructure prepeatstructureNode1;
        {
            // Block
        TParL tparlNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PValue pvalueNode5;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        tparlNode2 = (TParL)nodeArrayList1.get(0);
        {
            // Block
        TIdentifier tidentifierNode6;
        tidentifierNode6 = (TIdentifier)nodeArrayList2.get(0);

        pvalueNode5 = new AIdentifierValue(tidentifierNode6);
        }
        tparrNode7 = (TParR)nodeArrayList3.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList4.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList5.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList6.get(0);

        prepeatstructureNode1 = new AIdRepeatstructure(tparlNode2, null, null, pvalueNode5, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10);
        }
	nodeList.add(prepeatstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AAidrepeatstructure1$Literal1Repeatstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeatstructure prepeatstructureNode1;
        {
            // Block
        TParL tparlNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PValue pvalueNode5;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        tparlNode2 = (TParL)nodeArrayList1.get(0);
        {
            // Block
        PLiteral pliteralNode6;
        pliteralNode6 = (PLiteral)nodeArrayList2.get(0);

        pvalueNode5 = new ALiteralValue(pliteralNode6);
        }
        tparrNode7 = (TParR)nodeArrayList3.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList4.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList5.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList6.get(0);

        prepeatstructureNode1 = new AIdRepeatstructure(tparlNode2, null, null, pvalueNode5, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10);
        }
	nodeList.add(prepeatstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AAidrepeatstructure1$Rnd1Repeatstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeatstructure prepeatstructureNode1;
        {
            // Block
        TParL tparlNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PValue pvalueNode5;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        tparlNode2 = (TParL)nodeArrayList1.get(0);
        {
            // Block
        PRnd prndNode6;
        prndNode6 = (PRnd)nodeArrayList2.get(0);

        pvalueNode5 = new ARndValue(prndNode6);
        }
        tparrNode7 = (TParR)nodeArrayList3.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList4.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList5.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList6.get(0);

        prepeatstructureNode1 = new AIdRepeatstructure(tparlNode2, null, null, pvalueNode5, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10);
        }
	nodeList.add(prepeatstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AAidrepeatstructure2$Identifier1Repeatstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeatstructure prepeatstructureNode1;
        {
            // Block
        TParL tparlNode2;
        PExpr pexprNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PValue pvalueNode5;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        tparlNode2 = (TParL)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);
        {
            // Block
        TIdentifier tidentifierNode6;
        tidentifierNode6 = (TIdentifier)nodeArrayList3.get(0);

        pvalueNode5 = new AIdentifierValue(tidentifierNode6);
        }
        tparrNode7 = (TParR)nodeArrayList4.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList5.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList6.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList7.get(0);

        prepeatstructureNode1 = new AIdRepeatstructure(tparlNode2, pexprNode3, null, pvalueNode5, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10);
        }
	nodeList.add(prepeatstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AAidrepeatstructure2$Literal1Repeatstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeatstructure prepeatstructureNode1;
        {
            // Block
        TParL tparlNode2;
        PExpr pexprNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PValue pvalueNode5;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        tparlNode2 = (TParL)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);
        {
            // Block
        PLiteral pliteralNode6;
        pliteralNode6 = (PLiteral)nodeArrayList3.get(0);

        pvalueNode5 = new ALiteralValue(pliteralNode6);
        }
        tparrNode7 = (TParR)nodeArrayList4.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList5.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList6.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList7.get(0);

        prepeatstructureNode1 = new AIdRepeatstructure(tparlNode2, pexprNode3, null, pvalueNode5, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10);
        }
	nodeList.add(prepeatstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AAidrepeatstructure2$Rnd1Repeatstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeatstructure prepeatstructureNode1;
        {
            // Block
        TParL tparlNode2;
        PExpr pexprNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PValue pvalueNode5;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        tparlNode2 = (TParL)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);
        {
            // Block
        PRnd prndNode6;
        prndNode6 = (PRnd)nodeArrayList3.get(0);

        pvalueNode5 = new ARndValue(prndNode6);
        }
        tparrNode7 = (TParR)nodeArrayList4.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList5.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList6.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList7.get(0);

        prepeatstructureNode1 = new AIdRepeatstructure(tparlNode2, pexprNode3, null, pvalueNode5, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10);
        }
	nodeList.add(prepeatstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AAidrepeatstructure3$Identifier1Repeatstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeatstructure prepeatstructureNode1;
        {
            // Block
        TParL tparlNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TComma tcommaNode4;
        PValue pvalueNode5;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        tparlNode2 = (TParL)nodeArrayList1.get(0);
        tcommaNode4 = (TComma)nodeArrayList2.get(0);
        {
            // Block
        TIdentifier tidentifierNode6;
        tidentifierNode6 = (TIdentifier)nodeArrayList3.get(0);

        pvalueNode5 = new AIdentifierValue(tidentifierNode6);
        }
        tparrNode7 = (TParR)nodeArrayList4.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList5.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList6.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList7.get(0);

        prepeatstructureNode1 = new AIdRepeatstructure(tparlNode2, null, tcommaNode4, pvalueNode5, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10);
        }
	nodeList.add(prepeatstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AAidrepeatstructure3$Literal1Repeatstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeatstructure prepeatstructureNode1;
        {
            // Block
        TParL tparlNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TComma tcommaNode4;
        PValue pvalueNode5;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        tparlNode2 = (TParL)nodeArrayList1.get(0);
        tcommaNode4 = (TComma)nodeArrayList2.get(0);
        {
            // Block
        PLiteral pliteralNode6;
        pliteralNode6 = (PLiteral)nodeArrayList3.get(0);

        pvalueNode5 = new ALiteralValue(pliteralNode6);
        }
        tparrNode7 = (TParR)nodeArrayList4.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList5.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList6.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList7.get(0);

        prepeatstructureNode1 = new AIdRepeatstructure(tparlNode2, null, tcommaNode4, pvalueNode5, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10);
        }
	nodeList.add(prepeatstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AAidrepeatstructure3$Rnd1Repeatstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeatstructure prepeatstructureNode1;
        {
            // Block
        TParL tparlNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TComma tcommaNode4;
        PValue pvalueNode5;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        tparlNode2 = (TParL)nodeArrayList1.get(0);
        tcommaNode4 = (TComma)nodeArrayList2.get(0);
        {
            // Block
        PRnd prndNode6;
        prndNode6 = (PRnd)nodeArrayList3.get(0);

        pvalueNode5 = new ARndValue(prndNode6);
        }
        tparrNode7 = (TParR)nodeArrayList4.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList5.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList6.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList7.get(0);

        prepeatstructureNode1 = new AIdRepeatstructure(tparlNode2, null, tcommaNode4, pvalueNode5, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10);
        }
	nodeList.add(prepeatstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AAidrepeatstructure4$Identifier1Repeatstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeatstructure prepeatstructureNode1;
        {
            // Block
        TParL tparlNode2;
        PExpr pexprNode3;
        TComma tcommaNode4;
        PValue pvalueNode5;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        tparlNode2 = (TParL)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);
        tcommaNode4 = (TComma)nodeArrayList3.get(0);
        {
            // Block
        TIdentifier tidentifierNode6;
        tidentifierNode6 = (TIdentifier)nodeArrayList4.get(0);

        pvalueNode5 = new AIdentifierValue(tidentifierNode6);
        }
        tparrNode7 = (TParR)nodeArrayList5.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList6.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList7.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList8.get(0);

        prepeatstructureNode1 = new AIdRepeatstructure(tparlNode2, pexprNode3, tcommaNode4, pvalueNode5, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10);
        }
	nodeList.add(prepeatstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AAidrepeatstructure4$Literal1Repeatstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeatstructure prepeatstructureNode1;
        {
            // Block
        TParL tparlNode2;
        PExpr pexprNode3;
        TComma tcommaNode4;
        PValue pvalueNode5;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        tparlNode2 = (TParL)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);
        tcommaNode4 = (TComma)nodeArrayList3.get(0);
        {
            // Block
        PLiteral pliteralNode6;
        pliteralNode6 = (PLiteral)nodeArrayList4.get(0);

        pvalueNode5 = new ALiteralValue(pliteralNode6);
        }
        tparrNode7 = (TParR)nodeArrayList5.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList6.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList7.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList8.get(0);

        prepeatstructureNode1 = new AIdRepeatstructure(tparlNode2, pexprNode3, tcommaNode4, pvalueNode5, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10);
        }
	nodeList.add(prepeatstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AAidrepeatstructure4$Rnd1Repeatstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeatstructure prepeatstructureNode1;
        {
            // Block
        TParL tparlNode2;
        PExpr pexprNode3;
        TComma tcommaNode4;
        PValue pvalueNode5;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        tparlNode2 = (TParL)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);
        tcommaNode4 = (TComma)nodeArrayList3.get(0);
        {
            // Block
        PRnd prndNode6;
        prndNode6 = (PRnd)nodeArrayList4.get(0);

        pvalueNode5 = new ARndValue(prndNode6);
        }
        tparrNode7 = (TParR)nodeArrayList5.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList6.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList7.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList8.get(0);

        prepeatstructureNode1 = new AIdRepeatstructure(tparlNode2, pexprNode3, tcommaNode4, pvalueNode5, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10);
        }
	nodeList.add(prepeatstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce ARepeatstructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeatstructure prepeatstructureNode1;
        {
            // Block
        TForeach tforeachNode2;
        TParL tparlNode3;
        TIdentifier tidentifierNode4;
        TIn tinNode5;
        TIdentifier tidentifierNode6;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        tforeachNode2 = (TForeach)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        tidentifierNode4 = (TIdentifier)nodeArrayList3.get(0);
        tinNode5 = (TIn)nodeArrayList4.get(0);
        tidentifierNode6 = (TIdentifier)nodeArrayList5.get(0);
        tparrNode7 = (TParR)nodeArrayList6.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList7.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList8.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList9.get(0);

        prepeatstructureNode1 = new ARepeatstructure(tforeachNode2, tparlNode3, tidentifierNode4, tinNode5, tidentifierNode6, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10);
        }
	nodeList.add(prepeatstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AStartupEvent */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEvent peventNode1;
        {
            // Block
        TStartup tstartupNode2;
        TParL tparlNode3;
        TFig tfigNode4;
        TColon tcolonNode5;
        TIdentifier tidentifierNode6;
        TParR tparrNode7;
        TCurlyL tcurlylNode8;
        PDecls pdeclsNode9;
        TCurlyR tcurlyrNode10;
        tstartupNode2 = (TStartup)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        tfigNode4 = (TFig)nodeArrayList3.get(0);
        tcolonNode5 = (TColon)nodeArrayList4.get(0);
        tidentifierNode6 = (TIdentifier)nodeArrayList5.get(0);
        tparrNode7 = (TParR)nodeArrayList6.get(0);
        tcurlylNode8 = (TCurlyL)nodeArrayList7.get(0);
        pdeclsNode9 = (PDecls)nodeArrayList8.get(0);
        tcurlyrNode10 = (TCurlyR)nodeArrayList9.get(0);

        peventNode1 = new AStartupEvent(tstartupNode2, tparlNode3, tfigNode4, tcolonNode5, tidentifierNode6, tparrNode7, tcurlylNode8, pdeclsNode9, tcurlyrNode10);
        }
	nodeList.add(peventNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce ASingleVarDecls$Identifier1Vardecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVardecl pvardeclNode1;
        {
            // Block
        TNew tnewNode2;
        PValue pvalueNode3;
        TEquals tequalsNode5;
        PExpr pexprNode6;
        TSemiC tsemicNode7;
        tnewNode2 = (TNew)nodeArrayList1.get(0);
        {
            // Block
        TIdentifier tidentifierNode4;
        tidentifierNode4 = (TIdentifier)nodeArrayList2.get(0);

        pvalueNode3 = new AIdentifierValue(tidentifierNode4);
        }
        tequalsNode5 = (TEquals)nodeArrayList3.get(0);
        pexprNode6 = (PExpr)nodeArrayList4.get(0);
        tsemicNode7 = (TSemiC)nodeArrayList5.get(0);

        pvardeclNode1 = new ASingleVarDeclsVardecl(tnewNode2, pvalueNode3, tequalsNode5, pexprNode6, tsemicNode7);
        }
	nodeList.add(pvardeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce ASingleVarDecls$Literal1Vardecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVardecl pvardeclNode1;
        {
            // Block
        TNew tnewNode2;
        PValue pvalueNode3;
        TEquals tequalsNode5;
        PExpr pexprNode6;
        TSemiC tsemicNode7;
        tnewNode2 = (TNew)nodeArrayList1.get(0);
        {
            // Block
        PLiteral pliteralNode4;
        pliteralNode4 = (PLiteral)nodeArrayList2.get(0);

        pvalueNode3 = new ALiteralValue(pliteralNode4);
        }
        tequalsNode5 = (TEquals)nodeArrayList3.get(0);
        pexprNode6 = (PExpr)nodeArrayList4.get(0);
        tsemicNode7 = (TSemiC)nodeArrayList5.get(0);

        pvardeclNode1 = new ASingleVarDeclsVardecl(tnewNode2, pvalueNode3, tequalsNode5, pexprNode6, tsemicNode7);
        }
	nodeList.add(pvardeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce ASingleVarDecls$Rnd1Vardecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVardecl pvardeclNode1;
        {
            // Block
        TNew tnewNode2;
        PValue pvalueNode3;
        TEquals tequalsNode5;
        PExpr pexprNode6;
        TSemiC tsemicNode7;
        tnewNode2 = (TNew)nodeArrayList1.get(0);
        {
            // Block
        PRnd prndNode4;
        prndNode4 = (PRnd)nodeArrayList2.get(0);

        pvalueNode3 = new ARndValue(prndNode4);
        }
        tequalsNode5 = (TEquals)nodeArrayList3.get(0);
        pexprNode6 = (PExpr)nodeArrayList4.get(0);
        tsemicNode7 = (TSemiC)nodeArrayList5.get(0);

        pvardeclNode1 = new ASingleVarDeclsVardecl(tnewNode2, pvalueNode3, tequalsNode5, pexprNode6, tsemicNode7);
        }
	nodeList.add(pvardeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AAlistvardecl1Vardecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVardecl pvardeclNode1;
        {
            // Block
        TNew tnewNode2;
        TIdentifier tidentifierNode3;
        TEquals tequalsNode4;
        TBrackL tbracklNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PListvariables plistvariablesNode7;
        TBrackR tbrackrNode8;
        TSemiC tsemicNode9;
        tnewNode2 = (TNew)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tequalsNode4 = (TEquals)nodeArrayList3.get(0);
        tbracklNode5 = (TBrackL)nodeArrayList4.get(0);
        plistvariablesNode7 = (PListvariables)nodeArrayList5.get(0);
        tbrackrNode8 = (TBrackR)nodeArrayList6.get(0);
        tsemicNode9 = (TSemiC)nodeArrayList7.get(0);

        pvardeclNode1 = new AListVardecl(tnewNode2, tidentifierNode3, tequalsNode4, tbracklNode5, null, plistvariablesNode7, tbrackrNode8, tsemicNode9);
        }
	nodeList.add(pvardeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AAlistvardecl2$Identifier1Vardecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVardecl pvardeclNode1;
        {
            // Block
        TNew tnewNode2;
        TIdentifier tidentifierNode3;
        TEquals tequalsNode4;
        TBrackL tbracklNode5;
        PValue pvalueNode6;
        PListvariables plistvariablesNode8;
        TBrackR tbrackrNode9;
        TSemiC tsemicNode10;
        tnewNode2 = (TNew)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tequalsNode4 = (TEquals)nodeArrayList3.get(0);
        tbracklNode5 = (TBrackL)nodeArrayList4.get(0);
        {
            // Block
        TIdentifier tidentifierNode7;
        tidentifierNode7 = (TIdentifier)nodeArrayList5.get(0);

        pvalueNode6 = new AIdentifierValue(tidentifierNode7);
        }
        plistvariablesNode8 = (PListvariables)nodeArrayList6.get(0);
        tbrackrNode9 = (TBrackR)nodeArrayList7.get(0);
        tsemicNode10 = (TSemiC)nodeArrayList8.get(0);

        pvardeclNode1 = new AListVardecl(tnewNode2, tidentifierNode3, tequalsNode4, tbracklNode5, pvalueNode6, plistvariablesNode8, tbrackrNode9, tsemicNode10);
        }
	nodeList.add(pvardeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AAlistvardecl2$Literal1Vardecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVardecl pvardeclNode1;
        {
            // Block
        TNew tnewNode2;
        TIdentifier tidentifierNode3;
        TEquals tequalsNode4;
        TBrackL tbracklNode5;
        PValue pvalueNode6;
        PListvariables plistvariablesNode8;
        TBrackR tbrackrNode9;
        TSemiC tsemicNode10;
        tnewNode2 = (TNew)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tequalsNode4 = (TEquals)nodeArrayList3.get(0);
        tbracklNode5 = (TBrackL)nodeArrayList4.get(0);
        {
            // Block
        PLiteral pliteralNode7;
        pliteralNode7 = (PLiteral)nodeArrayList5.get(0);

        pvalueNode6 = new ALiteralValue(pliteralNode7);
        }
        plistvariablesNode8 = (PListvariables)nodeArrayList6.get(0);
        tbrackrNode9 = (TBrackR)nodeArrayList7.get(0);
        tsemicNode10 = (TSemiC)nodeArrayList8.get(0);

        pvardeclNode1 = new AListVardecl(tnewNode2, tidentifierNode3, tequalsNode4, tbracklNode5, pvalueNode6, plistvariablesNode8, tbrackrNode9, tsemicNode10);
        }
	nodeList.add(pvardeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AAlistvardecl2$Rnd1Vardecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVardecl pvardeclNode1;
        {
            // Block
        TNew tnewNode2;
        TIdentifier tidentifierNode3;
        TEquals tequalsNode4;
        TBrackL tbracklNode5;
        PValue pvalueNode6;
        PListvariables plistvariablesNode8;
        TBrackR tbrackrNode9;
        TSemiC tsemicNode10;
        tnewNode2 = (TNew)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tequalsNode4 = (TEquals)nodeArrayList3.get(0);
        tbracklNode5 = (TBrackL)nodeArrayList4.get(0);
        {
            // Block
        PRnd prndNode7;
        prndNode7 = (PRnd)nodeArrayList5.get(0);

        pvalueNode6 = new ARndValue(prndNode7);
        }
        plistvariablesNode8 = (PListvariables)nodeArrayList6.get(0);
        tbrackrNode9 = (TBrackR)nodeArrayList7.get(0);
        tsemicNode10 = (TSemiC)nodeArrayList8.get(0);

        pvardeclNode1 = new AListVardecl(tnewNode2, tidentifierNode3, tequalsNode4, tbracklNode5, pvalueNode6, plistvariablesNode8, tbrackrNode9, tsemicNode10);
        }
	nodeList.add(pvardeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ASayAction */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAction pactionNode1;
        {
            // Block
        PActionsay pactionsayNode2;
        pactionsayNode2 = (PActionsay)nodeArrayList1.get(0);

        pactionNode1 = new ASayAction(pactionsayNode2);
        }
	nodeList.add(pactionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AThinkAction */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAction pactionNode1;
        {
            // Block
        PActionthink pactionthinkNode2;
        pactionthinkNode2 = (PActionthink)nodeArrayList1.get(0);

        pactionNode1 = new AThinkAction(pactionthinkNode2);
        }
	nodeList.add(pactionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AOption1Actionsay */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PActionsay pactionsayNode1;
        {
            // Block
        TSay tsayNode2;
        TParL tparlNode3;
        PPrintstmt pprintstmtNode4;
        TParR tparrNode5;
        TSemiC tsemicNode6;
        tsayNode2 = (TSay)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pprintstmtNode4 = (PPrintstmt)nodeArrayList3.get(0);
        tparrNode5 = (TParR)nodeArrayList4.get(0);
        tsemicNode6 = (TSemiC)nodeArrayList5.get(0);

        pactionsayNode1 = new AOption1Actionsay(tsayNode2, tparlNode3, pprintstmtNode4, tparrNode5, tsemicNode6);
        }
	nodeList.add(pactionsayNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AOption2$Identifier1Actionsay */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PActionsay pactionsayNode1;
        {
            // Block
        TSay tsayNode2;
        TParL tparlNode3;
        PPrintstmt pprintstmtNode4;
        TComma tcommaNode5;
        TSec tsecNode6;
        TColon tcolonNode7;
        PValue pvalueNode8;
        TParR tparrNode10;
        TSemiC tsemicNode11;
        tsayNode2 = (TSay)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pprintstmtNode4 = (PPrintstmt)nodeArrayList3.get(0);
        tcommaNode5 = (TComma)nodeArrayList4.get(0);
        tsecNode6 = (TSec)nodeArrayList5.get(0);
        tcolonNode7 = (TColon)nodeArrayList6.get(0);
        {
            // Block
        TIdentifier tidentifierNode9;
        tidentifierNode9 = (TIdentifier)nodeArrayList7.get(0);

        pvalueNode8 = new AIdentifierValue(tidentifierNode9);
        }
        tparrNode10 = (TParR)nodeArrayList8.get(0);
        tsemicNode11 = (TSemiC)nodeArrayList9.get(0);

        pactionsayNode1 = new AOption2Actionsay(tsayNode2, tparlNode3, pprintstmtNode4, tcommaNode5, tsecNode6, tcolonNode7, pvalueNode8, tparrNode10, tsemicNode11);
        }
	nodeList.add(pactionsayNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AOption2$Literal1Actionsay */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PActionsay pactionsayNode1;
        {
            // Block
        TSay tsayNode2;
        TParL tparlNode3;
        PPrintstmt pprintstmtNode4;
        TComma tcommaNode5;
        TSec tsecNode6;
        TColon tcolonNode7;
        PValue pvalueNode8;
        TParR tparrNode10;
        TSemiC tsemicNode11;
        tsayNode2 = (TSay)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pprintstmtNode4 = (PPrintstmt)nodeArrayList3.get(0);
        tcommaNode5 = (TComma)nodeArrayList4.get(0);
        tsecNode6 = (TSec)nodeArrayList5.get(0);
        tcolonNode7 = (TColon)nodeArrayList6.get(0);
        {
            // Block
        PLiteral pliteralNode9;
        pliteralNode9 = (PLiteral)nodeArrayList7.get(0);

        pvalueNode8 = new ALiteralValue(pliteralNode9);
        }
        tparrNode10 = (TParR)nodeArrayList8.get(0);
        tsemicNode11 = (TSemiC)nodeArrayList9.get(0);

        pactionsayNode1 = new AOption2Actionsay(tsayNode2, tparlNode3, pprintstmtNode4, tcommaNode5, tsecNode6, tcolonNode7, pvalueNode8, tparrNode10, tsemicNode11);
        }
	nodeList.add(pactionsayNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AOption2$Rnd1Actionsay */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PActionsay pactionsayNode1;
        {
            // Block
        TSay tsayNode2;
        TParL tparlNode3;
        PPrintstmt pprintstmtNode4;
        TComma tcommaNode5;
        TSec tsecNode6;
        TColon tcolonNode7;
        PValue pvalueNode8;
        TParR tparrNode10;
        TSemiC tsemicNode11;
        tsayNode2 = (TSay)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pprintstmtNode4 = (PPrintstmt)nodeArrayList3.get(0);
        tcommaNode5 = (TComma)nodeArrayList4.get(0);
        tsecNode6 = (TSec)nodeArrayList5.get(0);
        tcolonNode7 = (TColon)nodeArrayList6.get(0);
        {
            // Block
        PRnd prndNode9;
        prndNode9 = (PRnd)nodeArrayList7.get(0);

        pvalueNode8 = new ARndValue(prndNode9);
        }
        tparrNode10 = (TParR)nodeArrayList8.get(0);
        tsemicNode11 = (TSemiC)nodeArrayList9.get(0);

        pactionsayNode1 = new AOption2Actionsay(tsayNode2, tparlNode3, pprintstmtNode4, tcommaNode5, tsecNode6, tcolonNode7, pvalueNode8, tparrNode10, tsemicNode11);
        }
	nodeList.add(pactionsayNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AOption1Actionthink */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PActionthink pactionthinkNode1;
        {
            // Block
        TThink tthinkNode2;
        TParL tparlNode3;
        PPrintstmt pprintstmtNode4;
        TParR tparrNode5;
        TSemiC tsemicNode6;
        tthinkNode2 = (TThink)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pprintstmtNode4 = (PPrintstmt)nodeArrayList3.get(0);
        tparrNode5 = (TParR)nodeArrayList4.get(0);
        tsemicNode6 = (TSemiC)nodeArrayList5.get(0);

        pactionthinkNode1 = new AOption1Actionthink(tthinkNode2, tparlNode3, pprintstmtNode4, tparrNode5, tsemicNode6);
        }
	nodeList.add(pactionthinkNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AOption2$Identifier1Actionthink */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PActionthink pactionthinkNode1;
        {
            // Block
        TThink tthinkNode2;
        TParL tparlNode3;
        PPrintstmt pprintstmtNode4;
        TComma tcommaNode5;
        TSec tsecNode6;
        TColon tcolonNode7;
        PValue pvalueNode8;
        TParR tparrNode10;
        TSemiC tsemicNode11;
        tthinkNode2 = (TThink)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pprintstmtNode4 = (PPrintstmt)nodeArrayList3.get(0);
        tcommaNode5 = (TComma)nodeArrayList4.get(0);
        tsecNode6 = (TSec)nodeArrayList5.get(0);
        tcolonNode7 = (TColon)nodeArrayList6.get(0);
        {
            // Block
        TIdentifier tidentifierNode9;
        tidentifierNode9 = (TIdentifier)nodeArrayList7.get(0);

        pvalueNode8 = new AIdentifierValue(tidentifierNode9);
        }
        tparrNode10 = (TParR)nodeArrayList8.get(0);
        tsemicNode11 = (TSemiC)nodeArrayList9.get(0);

        pactionthinkNode1 = new AOption2Actionthink(tthinkNode2, tparlNode3, pprintstmtNode4, tcommaNode5, tsecNode6, tcolonNode7, pvalueNode8, tparrNode10, tsemicNode11);
        }
	nodeList.add(pactionthinkNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AOption2$Literal1Actionthink */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PActionthink pactionthinkNode1;
        {
            // Block
        TThink tthinkNode2;
        TParL tparlNode3;
        PPrintstmt pprintstmtNode4;
        TComma tcommaNode5;
        TSec tsecNode6;
        TColon tcolonNode7;
        PValue pvalueNode8;
        TParR tparrNode10;
        TSemiC tsemicNode11;
        tthinkNode2 = (TThink)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pprintstmtNode4 = (PPrintstmt)nodeArrayList3.get(0);
        tcommaNode5 = (TComma)nodeArrayList4.get(0);
        tsecNode6 = (TSec)nodeArrayList5.get(0);
        tcolonNode7 = (TColon)nodeArrayList6.get(0);
        {
            // Block
        PLiteral pliteralNode9;
        pliteralNode9 = (PLiteral)nodeArrayList7.get(0);

        pvalueNode8 = new ALiteralValue(pliteralNode9);
        }
        tparrNode10 = (TParR)nodeArrayList8.get(0);
        tsemicNode11 = (TSemiC)nodeArrayList9.get(0);

        pactionthinkNode1 = new AOption2Actionthink(tthinkNode2, tparlNode3, pprintstmtNode4, tcommaNode5, tsecNode6, tcolonNode7, pvalueNode8, tparrNode10, tsemicNode11);
        }
	nodeList.add(pactionthinkNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AOption2$Rnd1Actionthink */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PActionthink pactionthinkNode1;
        {
            // Block
        TThink tthinkNode2;
        TParL tparlNode3;
        PPrintstmt pprintstmtNode4;
        TComma tcommaNode5;
        TSec tsecNode6;
        TColon tcolonNode7;
        PValue pvalueNode8;
        TParR tparrNode10;
        TSemiC tsemicNode11;
        tthinkNode2 = (TThink)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        pprintstmtNode4 = (PPrintstmt)nodeArrayList3.get(0);
        tcommaNode5 = (TComma)nodeArrayList4.get(0);
        tsecNode6 = (TSec)nodeArrayList5.get(0);
        tcolonNode7 = (TColon)nodeArrayList6.get(0);
        {
            // Block
        PRnd prndNode9;
        prndNode9 = (PRnd)nodeArrayList7.get(0);

        pvalueNode8 = new ARndValue(prndNode9);
        }
        tparrNode10 = (TParR)nodeArrayList8.get(0);
        tsemicNode11 = (TSemiC)nodeArrayList9.get(0);

        pactionthinkNode1 = new AOption2Actionthink(tthinkNode2, tparlNode3, pprintstmtNode4, tcommaNode5, tsecNode6, tcolonNode7, pvalueNode8, tparrNode10, tsemicNode11);
        }
	nodeList.add(pactionthinkNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce APlus$Identifier1Printstmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrintstmt pprintstmtNode1;
        {
            // Block
        PValue pvalueNode2;
        TPlus tplusNode4;
        PPrintstmt pprintstmtNode5;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pvalueNode2 = new AIdentifierValue(tidentifierNode3);
        }
        tplusNode4 = (TPlus)nodeArrayList2.get(0);
        pprintstmtNode5 = (PPrintstmt)nodeArrayList3.get(0);

        pprintstmtNode1 = new APlusPrintstmt(pvalueNode2, tplusNode4, pprintstmtNode5);
        }
	nodeList.add(pprintstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce APlus$Literal1Printstmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrintstmt pprintstmtNode1;
        {
            // Block
        PValue pvalueNode2;
        TPlus tplusNode4;
        PPrintstmt pprintstmtNode5;
        {
            // Block
        PLiteral pliteralNode3;
        pliteralNode3 = (PLiteral)nodeArrayList1.get(0);

        pvalueNode2 = new ALiteralValue(pliteralNode3);
        }
        tplusNode4 = (TPlus)nodeArrayList2.get(0);
        pprintstmtNode5 = (PPrintstmt)nodeArrayList3.get(0);

        pprintstmtNode1 = new APlusPrintstmt(pvalueNode2, tplusNode4, pprintstmtNode5);
        }
	nodeList.add(pprintstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce APlus$Rnd1Printstmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrintstmt pprintstmtNode1;
        {
            // Block
        PValue pvalueNode2;
        TPlus tplusNode4;
        PPrintstmt pprintstmtNode5;
        {
            // Block
        PRnd prndNode3;
        prndNode3 = (PRnd)nodeArrayList1.get(0);

        pvalueNode2 = new ARndValue(prndNode3);
        }
        tplusNode4 = (TPlus)nodeArrayList2.get(0);
        pprintstmtNode5 = (PPrintstmt)nodeArrayList3.get(0);

        pprintstmtNode1 = new APlusPrintstmt(pvalueNode2, tplusNode4, pprintstmtNode5);
        }
	nodeList.add(pprintstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AVal$Identifier1Printstmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrintstmt pprintstmtNode1;
        {
            // Block
        PValue pvalueNode2;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pvalueNode2 = new AIdentifierValue(tidentifierNode3);
        }

        pprintstmtNode1 = new AValPrintstmt(pvalueNode2);
        }
	nodeList.add(pprintstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AVal$Literal1Printstmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrintstmt pprintstmtNode1;
        {
            // Block
        PValue pvalueNode2;
        {
            // Block
        PLiteral pliteralNode3;
        pliteralNode3 = (PLiteral)nodeArrayList1.get(0);

        pvalueNode2 = new ALiteralValue(pliteralNode3);
        }

        pprintstmtNode1 = new AValPrintstmt(pvalueNode2);
        }
	nodeList.add(pprintstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AVal$Rnd1Printstmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrintstmt pprintstmtNode1;
        {
            // Block
        PValue pvalueNode2;
        {
            // Block
        PRnd prndNode3;
        prndNode3 = (PRnd)nodeArrayList1.get(0);

        pvalueNode2 = new ARndValue(prndNode3);
        }

        pprintstmtNode1 = new AValPrintstmt(pvalueNode2);
        }
	nodeList.add(pprintstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AListvariables$Identifier1Listvariables */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListvariables plistvariablesNode1;
        {
            // Block
        TComma tcommaNode2;
        PValue pvalueNode3;
        PListvariables plistvariablesNode5;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        {
            // Block
        TIdentifier tidentifierNode4;
        tidentifierNode4 = (TIdentifier)nodeArrayList2.get(0);

        pvalueNode3 = new AIdentifierValue(tidentifierNode4);
        }
        plistvariablesNode5 = (PListvariables)nodeArrayList3.get(0);

        plistvariablesNode1 = new AListvariablesListvariables(tcommaNode2, pvalueNode3, plistvariablesNode5);
        }
	nodeList.add(plistvariablesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AListvariables$Literal1Listvariables */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListvariables plistvariablesNode1;
        {
            // Block
        TComma tcommaNode2;
        PValue pvalueNode3;
        PListvariables plistvariablesNode5;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        {
            // Block
        PLiteral pliteralNode4;
        pliteralNode4 = (PLiteral)nodeArrayList2.get(0);

        pvalueNode3 = new ALiteralValue(pliteralNode4);
        }
        plistvariablesNode5 = (PListvariables)nodeArrayList3.get(0);

        plistvariablesNode1 = new AListvariablesListvariables(tcommaNode2, pvalueNode3, plistvariablesNode5);
        }
	nodeList.add(plistvariablesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AListvariables$Rnd1Listvariables */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListvariables plistvariablesNode1;
        {
            // Block
        TComma tcommaNode2;
        PValue pvalueNode3;
        PListvariables plistvariablesNode5;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        {
            // Block
        PRnd prndNode4;
        prndNode4 = (PRnd)nodeArrayList2.get(0);

        pvalueNode3 = new ARndValue(prndNode4);
        }
        plistvariablesNode5 = (PListvariables)nodeArrayList3.get(0);

        plistvariablesNode1 = new AListvariablesListvariables(tcommaNode2, pvalueNode3, plistvariablesNode5);
        }
	nodeList.add(plistvariablesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AListvariables */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PListvariables plistvariablesNode1;
        {
            // Block

        plistvariablesNode1 = new AListvariables();
        }
	nodeList.add(plistvariablesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AList$Identifier1$Identifier2Stmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        PValue pvalueNode2;
        TDot tdotNode4;
        TAdd taddNode5;
        TParL tparlNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        TSemiC tsemicNode10;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pvalueNode2 = new AIdentifierValue(tidentifierNode3);
        }
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        taddNode5 = (TAdd)nodeArrayList3.get(0);
        tparlNode6 = (TParL)nodeArrayList4.get(0);
        {
            // Block
        TIdentifier tidentifierNode8;
        tidentifierNode8 = (TIdentifier)nodeArrayList5.get(0);

        pvalueNode7 = new AIdentifierValue(tidentifierNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);
        tsemicNode10 = (TSemiC)nodeArrayList7.get(0);

        pstmtNode1 = new AListStmt(pvalueNode2, tdotNode4, taddNode5, tparlNode6, pvalueNode7, tparrNode9, tsemicNode10);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce AList$Identifier1$Literal2Stmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        PValue pvalueNode2;
        TDot tdotNode4;
        TAdd taddNode5;
        TParL tparlNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        TSemiC tsemicNode10;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pvalueNode2 = new AIdentifierValue(tidentifierNode3);
        }
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        taddNode5 = (TAdd)nodeArrayList3.get(0);
        tparlNode6 = (TParL)nodeArrayList4.get(0);
        {
            // Block
        PLiteral pliteralNode8;
        pliteralNode8 = (PLiteral)nodeArrayList5.get(0);

        pvalueNode7 = new ALiteralValue(pliteralNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);
        tsemicNode10 = (TSemiC)nodeArrayList7.get(0);

        pstmtNode1 = new AListStmt(pvalueNode2, tdotNode4, taddNode5, tparlNode6, pvalueNode7, tparrNode9, tsemicNode10);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AList$Identifier1$Rnd2Stmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        PValue pvalueNode2;
        TDot tdotNode4;
        TAdd taddNode5;
        TParL tparlNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        TSemiC tsemicNode10;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pvalueNode2 = new AIdentifierValue(tidentifierNode3);
        }
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        taddNode5 = (TAdd)nodeArrayList3.get(0);
        tparlNode6 = (TParL)nodeArrayList4.get(0);
        {
            // Block
        PRnd prndNode8;
        prndNode8 = (PRnd)nodeArrayList5.get(0);

        pvalueNode7 = new ARndValue(prndNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);
        tsemicNode10 = (TSemiC)nodeArrayList7.get(0);

        pstmtNode1 = new AListStmt(pvalueNode2, tdotNode4, taddNode5, tparlNode6, pvalueNode7, tparrNode9, tsemicNode10);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce AList$Literal1$Identifier2Stmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        PValue pvalueNode2;
        TDot tdotNode4;
        TAdd taddNode5;
        TParL tparlNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        TSemiC tsemicNode10;
        {
            // Block
        PLiteral pliteralNode3;
        pliteralNode3 = (PLiteral)nodeArrayList1.get(0);

        pvalueNode2 = new ALiteralValue(pliteralNode3);
        }
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        taddNode5 = (TAdd)nodeArrayList3.get(0);
        tparlNode6 = (TParL)nodeArrayList4.get(0);
        {
            // Block
        TIdentifier tidentifierNode8;
        tidentifierNode8 = (TIdentifier)nodeArrayList5.get(0);

        pvalueNode7 = new AIdentifierValue(tidentifierNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);
        tsemicNode10 = (TSemiC)nodeArrayList7.get(0);

        pstmtNode1 = new AListStmt(pvalueNode2, tdotNode4, taddNode5, tparlNode6, pvalueNode7, tparrNode9, tsemicNode10);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AList$Literal1$Literal2Stmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        PValue pvalueNode2;
        TDot tdotNode4;
        TAdd taddNode5;
        TParL tparlNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        TSemiC tsemicNode10;
        {
            // Block
        PLiteral pliteralNode3;
        pliteralNode3 = (PLiteral)nodeArrayList1.get(0);

        pvalueNode2 = new ALiteralValue(pliteralNode3);
        }
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        taddNode5 = (TAdd)nodeArrayList3.get(0);
        tparlNode6 = (TParL)nodeArrayList4.get(0);
        {
            // Block
        PLiteral pliteralNode8;
        pliteralNode8 = (PLiteral)nodeArrayList5.get(0);

        pvalueNode7 = new ALiteralValue(pliteralNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);
        tsemicNode10 = (TSemiC)nodeArrayList7.get(0);

        pstmtNode1 = new AListStmt(pvalueNode2, tdotNode4, taddNode5, tparlNode6, pvalueNode7, tparrNode9, tsemicNode10);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AList$Literal1$Rnd2Stmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        PValue pvalueNode2;
        TDot tdotNode4;
        TAdd taddNode5;
        TParL tparlNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        TSemiC tsemicNode10;
        {
            // Block
        PLiteral pliteralNode3;
        pliteralNode3 = (PLiteral)nodeArrayList1.get(0);

        pvalueNode2 = new ALiteralValue(pliteralNode3);
        }
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        taddNode5 = (TAdd)nodeArrayList3.get(0);
        tparlNode6 = (TParL)nodeArrayList4.get(0);
        {
            // Block
        PRnd prndNode8;
        prndNode8 = (PRnd)nodeArrayList5.get(0);

        pvalueNode7 = new ARndValue(prndNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);
        tsemicNode10 = (TSemiC)nodeArrayList7.get(0);

        pstmtNode1 = new AListStmt(pvalueNode2, tdotNode4, taddNode5, tparlNode6, pvalueNode7, tparrNode9, tsemicNode10);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce AList$Rnd1$Identifier2Stmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        PValue pvalueNode2;
        TDot tdotNode4;
        TAdd taddNode5;
        TParL tparlNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        TSemiC tsemicNode10;
        {
            // Block
        PRnd prndNode3;
        prndNode3 = (PRnd)nodeArrayList1.get(0);

        pvalueNode2 = new ARndValue(prndNode3);
        }
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        taddNode5 = (TAdd)nodeArrayList3.get(0);
        tparlNode6 = (TParL)nodeArrayList4.get(0);
        {
            // Block
        TIdentifier tidentifierNode8;
        tidentifierNode8 = (TIdentifier)nodeArrayList5.get(0);

        pvalueNode7 = new AIdentifierValue(tidentifierNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);
        tsemicNode10 = (TSemiC)nodeArrayList7.get(0);

        pstmtNode1 = new AListStmt(pvalueNode2, tdotNode4, taddNode5, tparlNode6, pvalueNode7, tparrNode9, tsemicNode10);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AList$Rnd1$Literal2Stmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        PValue pvalueNode2;
        TDot tdotNode4;
        TAdd taddNode5;
        TParL tparlNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        TSemiC tsemicNode10;
        {
            // Block
        PRnd prndNode3;
        prndNode3 = (PRnd)nodeArrayList1.get(0);

        pvalueNode2 = new ARndValue(prndNode3);
        }
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        taddNode5 = (TAdd)nodeArrayList3.get(0);
        tparlNode6 = (TParL)nodeArrayList4.get(0);
        {
            // Block
        PLiteral pliteralNode8;
        pliteralNode8 = (PLiteral)nodeArrayList5.get(0);

        pvalueNode7 = new ALiteralValue(pliteralNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);
        tsemicNode10 = (TSemiC)nodeArrayList7.get(0);

        pstmtNode1 = new AListStmt(pvalueNode2, tdotNode4, taddNode5, tparlNode6, pvalueNode7, tparrNode9, tsemicNode10);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce AList$Rnd1$Rnd2Stmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        PValue pvalueNode2;
        TDot tdotNode4;
        TAdd taddNode5;
        TParL tparlNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        TSemiC tsemicNode10;
        {
            // Block
        PRnd prndNode3;
        prndNode3 = (PRnd)nodeArrayList1.get(0);

        pvalueNode2 = new ARndValue(prndNode3);
        }
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        taddNode5 = (TAdd)nodeArrayList3.get(0);
        tparlNode6 = (TParL)nodeArrayList4.get(0);
        {
            // Block
        PRnd prndNode8;
        prndNode8 = (PRnd)nodeArrayList5.get(0);

        pvalueNode7 = new ARndValue(prndNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);
        tsemicNode10 = (TSemiC)nodeArrayList7.get(0);

        pstmtNode1 = new AListStmt(pvalueNode2, tdotNode4, taddNode5, tparlNode6, pvalueNode7, tparrNode9, tsemicNode10);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce AAddStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        PExpr pexprNode2;
        TSemiC tsemicNode3;
        pexprNode2 = (PExpr)nodeArrayList1.get(0);
        tsemicNode3 = (TSemiC)nodeArrayList2.get(0);

        pstmtNode1 = new AAddStmt(pexprNode2, tsemicNode3);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce AExprExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        PExpr pexprNode2;
        TComma tcommaNode3;
        POpassign popassignNode4;
        pexprNode2 = (PExpr)nodeArrayList1.get(0);
        tcommaNode3 = (TComma)nodeArrayList2.get(0);
        popassignNode4 = (POpassign)nodeArrayList3.get(0);

        pexprNode1 = new AExprExpr(pexprNode2, tcommaNode3, popassignNode4);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce AOpassignExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        POpassign popassignNode2;
        popassignNode2 = (POpassign)nodeArrayList1.get(0);

        pexprNode1 = new AOpassignExpr(popassignNode2);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AOpassign1Opassign */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpassign popassignNode1;
        {
            // Block
        POpor poporNode2;
        TEquals tequalsNode3;
        POpassign popassignNode4;
        poporNode2 = (POpor)nodeArrayList1.get(0);
        tequalsNode3 = (TEquals)nodeArrayList2.get(0);
        popassignNode4 = (POpassign)nodeArrayList3.get(0);

        popassignNode1 = new AOpassign1Opassign(poporNode2, tequalsNode3, popassignNode4);
        }
	nodeList.add(popassignNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce AOpassign2Opassign */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpassign popassignNode1;
        {
            // Block
        POpor poporNode2;
        TIncrement tincrementNode3;
        POpassign popassignNode4;
        poporNode2 = (POpor)nodeArrayList1.get(0);
        tincrementNode3 = (TIncrement)nodeArrayList2.get(0);
        popassignNode4 = (POpassign)nodeArrayList3.get(0);

        popassignNode1 = new AOpassign2Opassign(poporNode2, tincrementNode3, popassignNode4);
        }
	nodeList.add(popassignNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce AOpassign3Opassign */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpassign popassignNode1;
        {
            // Block
        POpor poporNode2;
        TDecrement tdecrementNode3;
        POpassign popassignNode4;
        poporNode2 = (POpor)nodeArrayList1.get(0);
        tdecrementNode3 = (TDecrement)nodeArrayList2.get(0);
        popassignNode4 = (POpassign)nodeArrayList3.get(0);

        popassignNode1 = new AOpassign3Opassign(poporNode2, tdecrementNode3, popassignNode4);
        }
	nodeList.add(popassignNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce AOporOpassign */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpassign popassignNode1;
        {
            // Block
        POpor poporNode2;
        poporNode2 = (POpor)nodeArrayList1.get(0);

        popassignNode1 = new AOporOpassign(poporNode2);
        }
	nodeList.add(popassignNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AOporOpor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpor poporNode1;
        {
            // Block
        POpor poporNode2;
        TOr torNode3;
        POpand popandNode4;
        poporNode2 = (POpor)nodeArrayList1.get(0);
        torNode3 = (TOr)nodeArrayList2.get(0);
        popandNode4 = (POpand)nodeArrayList3.get(0);

        poporNode1 = new AOporOpor(poporNode2, torNode3, popandNode4);
        }
	nodeList.add(poporNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce AOpandOpor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpor poporNode1;
        {
            // Block
        POpand popandNode2;
        popandNode2 = (POpand)nodeArrayList1.get(0);

        poporNode1 = new AOpandOpor(popandNode2);
        }
	nodeList.add(poporNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AOpandOpand */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpand popandNode1;
        {
            // Block
        POpand popandNode2;
        TAnd tandNode3;
        POpcompare popcompareNode4;
        popandNode2 = (POpand)nodeArrayList1.get(0);
        tandNode3 = (TAnd)nodeArrayList2.get(0);
        popcompareNode4 = (POpcompare)nodeArrayList3.get(0);

        popandNode1 = new AOpandOpand(popandNode2, tandNode3, popcompareNode4);
        }
	nodeList.add(popandNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce AOpcompareOpand */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpand popandNode1;
        {
            // Block
        POpcompare popcompareNode2;
        popcompareNode2 = (POpcompare)nodeArrayList1.get(0);

        popandNode1 = new AOpcompareOpand(popcompareNode2);
        }
	nodeList.add(popandNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AOpcompare1$Identifier1Opcompare */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpcompare popcompareNode1;
        {
            // Block
        POpcompare popcompareNode2;
        TLess tlessNode3;
        PValue pvalueNode4;
        popcompareNode2 = (POpcompare)nodeArrayList1.get(0);
        tlessNode3 = (TLess)nodeArrayList2.get(0);
        {
            // Block
        TIdentifier tidentifierNode5;
        tidentifierNode5 = (TIdentifier)nodeArrayList3.get(0);

        pvalueNode4 = new AIdentifierValue(tidentifierNode5);
        }

        popcompareNode1 = new AOpcompare1Opcompare(popcompareNode2, tlessNode3, pvalueNode4);
        }
	nodeList.add(popcompareNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce AOpcompare1$Literal1Opcompare */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpcompare popcompareNode1;
        {
            // Block
        POpcompare popcompareNode2;
        TLess tlessNode3;
        PValue pvalueNode4;
        popcompareNode2 = (POpcompare)nodeArrayList1.get(0);
        tlessNode3 = (TLess)nodeArrayList2.get(0);
        {
            // Block
        PLiteral pliteralNode5;
        pliteralNode5 = (PLiteral)nodeArrayList3.get(0);

        pvalueNode4 = new ALiteralValue(pliteralNode5);
        }

        popcompareNode1 = new AOpcompare1Opcompare(popcompareNode2, tlessNode3, pvalueNode4);
        }
	nodeList.add(popcompareNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce AOpcompare1$Rnd1Opcompare */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpcompare popcompareNode1;
        {
            // Block
        POpcompare popcompareNode2;
        TLess tlessNode3;
        PValue pvalueNode4;
        popcompareNode2 = (POpcompare)nodeArrayList1.get(0);
        tlessNode3 = (TLess)nodeArrayList2.get(0);
        {
            // Block
        PRnd prndNode5;
        prndNode5 = (PRnd)nodeArrayList3.get(0);

        pvalueNode4 = new ARndValue(prndNode5);
        }

        popcompareNode1 = new AOpcompare1Opcompare(popcompareNode2, tlessNode3, pvalueNode4);
        }
	nodeList.add(popcompareNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce AOpcompare2$Identifier1Opcompare */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpcompare popcompareNode1;
        {
            // Block
        POpcompare popcompareNode2;
        TGreater tgreaterNode3;
        PValue pvalueNode4;
        popcompareNode2 = (POpcompare)nodeArrayList1.get(0);
        tgreaterNode3 = (TGreater)nodeArrayList2.get(0);
        {
            // Block
        TIdentifier tidentifierNode5;
        tidentifierNode5 = (TIdentifier)nodeArrayList3.get(0);

        pvalueNode4 = new AIdentifierValue(tidentifierNode5);
        }

        popcompareNode1 = new AOpcompare2Opcompare(popcompareNode2, tgreaterNode3, pvalueNode4);
        }
	nodeList.add(popcompareNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce AOpcompare2$Literal1Opcompare */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpcompare popcompareNode1;
        {
            // Block
        POpcompare popcompareNode2;
        TGreater tgreaterNode3;
        PValue pvalueNode4;
        popcompareNode2 = (POpcompare)nodeArrayList1.get(0);
        tgreaterNode3 = (TGreater)nodeArrayList2.get(0);
        {
            // Block
        PLiteral pliteralNode5;
        pliteralNode5 = (PLiteral)nodeArrayList3.get(0);

        pvalueNode4 = new ALiteralValue(pliteralNode5);
        }

        popcompareNode1 = new AOpcompare2Opcompare(popcompareNode2, tgreaterNode3, pvalueNode4);
        }
	nodeList.add(popcompareNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce AOpcompare2$Rnd1Opcompare */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpcompare popcompareNode1;
        {
            // Block
        POpcompare popcompareNode2;
        TGreater tgreaterNode3;
        PValue pvalueNode4;
        popcompareNode2 = (POpcompare)nodeArrayList1.get(0);
        tgreaterNode3 = (TGreater)nodeArrayList2.get(0);
        {
            // Block
        PRnd prndNode5;
        prndNode5 = (PRnd)nodeArrayList3.get(0);

        pvalueNode4 = new ARndValue(prndNode5);
        }

        popcompareNode1 = new AOpcompare2Opcompare(popcompareNode2, tgreaterNode3, pvalueNode4);
        }
	nodeList.add(popcompareNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce AOpcompare3$Identifier1Opcompare */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpcompare popcompareNode1;
        {
            // Block
        POpcompare popcompareNode2;
        TLessEqual tlessequalNode3;
        PValue pvalueNode4;
        popcompareNode2 = (POpcompare)nodeArrayList1.get(0);
        tlessequalNode3 = (TLessEqual)nodeArrayList2.get(0);
        {
            // Block
        TIdentifier tidentifierNode5;
        tidentifierNode5 = (TIdentifier)nodeArrayList3.get(0);

        pvalueNode4 = new AIdentifierValue(tidentifierNode5);
        }

        popcompareNode1 = new AOpcompare3Opcompare(popcompareNode2, tlessequalNode3, pvalueNode4);
        }
	nodeList.add(popcompareNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce AOpcompare3$Literal1Opcompare */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpcompare popcompareNode1;
        {
            // Block
        POpcompare popcompareNode2;
        TLessEqual tlessequalNode3;
        PValue pvalueNode4;
        popcompareNode2 = (POpcompare)nodeArrayList1.get(0);
        tlessequalNode3 = (TLessEqual)nodeArrayList2.get(0);
        {
            // Block
        PLiteral pliteralNode5;
        pliteralNode5 = (PLiteral)nodeArrayList3.get(0);

        pvalueNode4 = new ALiteralValue(pliteralNode5);
        }

        popcompareNode1 = new AOpcompare3Opcompare(popcompareNode2, tlessequalNode3, pvalueNode4);
        }
	nodeList.add(popcompareNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce AOpcompare3$Rnd1Opcompare */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpcompare popcompareNode1;
        {
            // Block
        POpcompare popcompareNode2;
        TLessEqual tlessequalNode3;
        PValue pvalueNode4;
        popcompareNode2 = (POpcompare)nodeArrayList1.get(0);
        tlessequalNode3 = (TLessEqual)nodeArrayList2.get(0);
        {
            // Block
        PRnd prndNode5;
        prndNode5 = (PRnd)nodeArrayList3.get(0);

        pvalueNode4 = new ARndValue(prndNode5);
        }

        popcompareNode1 = new AOpcompare3Opcompare(popcompareNode2, tlessequalNode3, pvalueNode4);
        }
	nodeList.add(popcompareNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce AOpcompare4$Identifier1Opcompare */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpcompare popcompareNode1;
        {
            // Block
        POpcompare popcompareNode2;
        TGreaterEqual tgreaterequalNode3;
        PValue pvalueNode4;
        popcompareNode2 = (POpcompare)nodeArrayList1.get(0);
        tgreaterequalNode3 = (TGreaterEqual)nodeArrayList2.get(0);
        {
            // Block
        TIdentifier tidentifierNode5;
        tidentifierNode5 = (TIdentifier)nodeArrayList3.get(0);

        pvalueNode4 = new AIdentifierValue(tidentifierNode5);
        }

        popcompareNode1 = new AOpcompare4Opcompare(popcompareNode2, tgreaterequalNode3, pvalueNode4);
        }
	nodeList.add(popcompareNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce AOpcompare4$Literal1Opcompare */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpcompare popcompareNode1;
        {
            // Block
        POpcompare popcompareNode2;
        TGreaterEqual tgreaterequalNode3;
        PValue pvalueNode4;
        popcompareNode2 = (POpcompare)nodeArrayList1.get(0);
        tgreaterequalNode3 = (TGreaterEqual)nodeArrayList2.get(0);
        {
            // Block
        PLiteral pliteralNode5;
        pliteralNode5 = (PLiteral)nodeArrayList3.get(0);

        pvalueNode4 = new ALiteralValue(pliteralNode5);
        }

        popcompareNode1 = new AOpcompare4Opcompare(popcompareNode2, tgreaterequalNode3, pvalueNode4);
        }
	nodeList.add(popcompareNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce AOpcompare4$Rnd1Opcompare */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpcompare popcompareNode1;
        {
            // Block
        POpcompare popcompareNode2;
        TGreaterEqual tgreaterequalNode3;
        PValue pvalueNode4;
        popcompareNode2 = (POpcompare)nodeArrayList1.get(0);
        tgreaterequalNode3 = (TGreaterEqual)nodeArrayList2.get(0);
        {
            // Block
        PRnd prndNode5;
        prndNode5 = (PRnd)nodeArrayList3.get(0);

        pvalueNode4 = new ARndValue(prndNode5);
        }

        popcompareNode1 = new AOpcompare4Opcompare(popcompareNode2, tgreaterequalNode3, pvalueNode4);
        }
	nodeList.add(popcompareNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new94() /* reduce AValue$Identifier1Opcompare */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpcompare popcompareNode1;
        {
            // Block
        PValue pvalueNode2;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pvalueNode2 = new AIdentifierValue(tidentifierNode3);
        }

        popcompareNode1 = new AValueOpcompare(pvalueNode2);
        }
	nodeList.add(popcompareNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new95() /* reduce AValue$Literal1Opcompare */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpcompare popcompareNode1;
        {
            // Block
        PValue pvalueNode2;
        {
            // Block
        PLiteral pliteralNode3;
        pliteralNode3 = (PLiteral)nodeArrayList1.get(0);

        pvalueNode2 = new ALiteralValue(pliteralNode3);
        }

        popcompareNode1 = new AValueOpcompare(pvalueNode2);
        }
	nodeList.add(popcompareNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new96() /* reduce AValue$Rnd1Opcompare */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpcompare popcompareNode1;
        {
            // Block
        PValue pvalueNode2;
        {
            // Block
        PRnd prndNode3;
        prndNode3 = (PRnd)nodeArrayList1.get(0);

        pvalueNode2 = new ARndValue(prndNode3);
        }

        popcompareNode1 = new AValueOpcompare(pvalueNode2);
        }
	nodeList.add(popcompareNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new97() /* reduce ALessEqualCompareToken */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCompareToken pcomparetokenNode1;
        {
            // Block
        TLessEqual tlessequalNode2;
        tlessequalNode2 = (TLessEqual)nodeArrayList1.get(0);

        pcomparetokenNode1 = new ALessEqualCompareToken(tlessequalNode2);
        }
	nodeList.add(pcomparetokenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new98() /* reduce ALessCompareToken */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCompareToken pcomparetokenNode1;
        {
            // Block
        TLess tlessNode2;
        tlessNode2 = (TLess)nodeArrayList1.get(0);

        pcomparetokenNode1 = new ALessCompareToken(tlessNode2);
        }
	nodeList.add(pcomparetokenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new99() /* reduce AGreaterEqualCompareToken */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCompareToken pcomparetokenNode1;
        {
            // Block
        TGreaterEqual tgreaterequalNode2;
        tgreaterequalNode2 = (TGreaterEqual)nodeArrayList1.get(0);

        pcomparetokenNode1 = new AGreaterEqualCompareToken(tgreaterequalNode2);
        }
	nodeList.add(pcomparetokenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new100() /* reduce AGreaterCompareToken */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCompareToken pcomparetokenNode1;
        {
            // Block
        TGreater tgreaterNode2;
        tgreaterNode2 = (TGreater)nodeArrayList1.get(0);

        pcomparetokenNode1 = new AGreaterCompareToken(tgreaterNode2);
        }
	nodeList.add(pcomparetokenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new101() /* reduce AMinus$Identifier1Operator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperator poperatorNode1;
        {
            // Block
        TMinus tminusNode2;
        PValue pvalueNode3;
        tminusNode2 = (TMinus)nodeArrayList1.get(0);
        {
            // Block
        TIdentifier tidentifierNode4;
        tidentifierNode4 = (TIdentifier)nodeArrayList2.get(0);

        pvalueNode3 = new AIdentifierValue(tidentifierNode4);
        }

        poperatorNode1 = new AMinusOperator(tminusNode2, pvalueNode3);
        }
	nodeList.add(poperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new102() /* reduce AMinus$Literal1Operator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperator poperatorNode1;
        {
            // Block
        TMinus tminusNode2;
        PValue pvalueNode3;
        tminusNode2 = (TMinus)nodeArrayList1.get(0);
        {
            // Block
        PLiteral pliteralNode4;
        pliteralNode4 = (PLiteral)nodeArrayList2.get(0);

        pvalueNode3 = new ALiteralValue(pliteralNode4);
        }

        poperatorNode1 = new AMinusOperator(tminusNode2, pvalueNode3);
        }
	nodeList.add(poperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new103() /* reduce AMinus$Rnd1Operator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperator poperatorNode1;
        {
            // Block
        TMinus tminusNode2;
        PValue pvalueNode3;
        tminusNode2 = (TMinus)nodeArrayList1.get(0);
        {
            // Block
        PRnd prndNode4;
        prndNode4 = (PRnd)nodeArrayList2.get(0);

        pvalueNode3 = new ARndValue(prndNode4);
        }

        poperatorNode1 = new AMinusOperator(tminusNode2, pvalueNode3);
        }
	nodeList.add(poperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new104() /* reduce APlus$Identifier1Operator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperator poperatorNode1;
        {
            // Block
        TPlus tplusNode2;
        PValue pvalueNode3;
        tplusNode2 = (TPlus)nodeArrayList1.get(0);
        {
            // Block
        TIdentifier tidentifierNode4;
        tidentifierNode4 = (TIdentifier)nodeArrayList2.get(0);

        pvalueNode3 = new AIdentifierValue(tidentifierNode4);
        }

        poperatorNode1 = new APlusOperator(tplusNode2, pvalueNode3);
        }
	nodeList.add(poperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new105() /* reduce APlus$Literal1Operator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperator poperatorNode1;
        {
            // Block
        TPlus tplusNode2;
        PValue pvalueNode3;
        tplusNode2 = (TPlus)nodeArrayList1.get(0);
        {
            // Block
        PLiteral pliteralNode4;
        pliteralNode4 = (PLiteral)nodeArrayList2.get(0);

        pvalueNode3 = new ALiteralValue(pliteralNode4);
        }

        poperatorNode1 = new APlusOperator(tplusNode2, pvalueNode3);
        }
	nodeList.add(poperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new106() /* reduce APlus$Rnd1Operator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperator poperatorNode1;
        {
            // Block
        TPlus tplusNode2;
        PValue pvalueNode3;
        tplusNode2 = (TPlus)nodeArrayList1.get(0);
        {
            // Block
        PRnd prndNode4;
        prndNode4 = (PRnd)nodeArrayList2.get(0);

        pvalueNode3 = new ARndValue(prndNode4);
        }

        poperatorNode1 = new APlusOperator(tplusNode2, pvalueNode3);
        }
	nodeList.add(poperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new107() /* reduce AMult$Identifier1Operator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperator poperatorNode1;
        {
            // Block
        TMult tmultNode2;
        PValue pvalueNode3;
        tmultNode2 = (TMult)nodeArrayList1.get(0);
        {
            // Block
        TIdentifier tidentifierNode4;
        tidentifierNode4 = (TIdentifier)nodeArrayList2.get(0);

        pvalueNode3 = new AIdentifierValue(tidentifierNode4);
        }

        poperatorNode1 = new AMultOperator(tmultNode2, pvalueNode3);
        }
	nodeList.add(poperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new108() /* reduce AMult$Literal1Operator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperator poperatorNode1;
        {
            // Block
        TMult tmultNode2;
        PValue pvalueNode3;
        tmultNode2 = (TMult)nodeArrayList1.get(0);
        {
            // Block
        PLiteral pliteralNode4;
        pliteralNode4 = (PLiteral)nodeArrayList2.get(0);

        pvalueNode3 = new ALiteralValue(pliteralNode4);
        }

        poperatorNode1 = new AMultOperator(tmultNode2, pvalueNode3);
        }
	nodeList.add(poperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new109() /* reduce AMult$Rnd1Operator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperator poperatorNode1;
        {
            // Block
        TMult tmultNode2;
        PValue pvalueNode3;
        tmultNode2 = (TMult)nodeArrayList1.get(0);
        {
            // Block
        PRnd prndNode4;
        prndNode4 = (PRnd)nodeArrayList2.get(0);

        pvalueNode3 = new ARndValue(prndNode4);
        }

        poperatorNode1 = new AMultOperator(tmultNode2, pvalueNode3);
        }
	nodeList.add(poperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new110() /* reduce ADiv$Identifier1Operator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperator poperatorNode1;
        {
            // Block
        TDiv tdivNode2;
        PValue pvalueNode3;
        tdivNode2 = (TDiv)nodeArrayList1.get(0);
        {
            // Block
        TIdentifier tidentifierNode4;
        tidentifierNode4 = (TIdentifier)nodeArrayList2.get(0);

        pvalueNode3 = new AIdentifierValue(tidentifierNode4);
        }

        poperatorNode1 = new ADivOperator(tdivNode2, pvalueNode3);
        }
	nodeList.add(poperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new111() /* reduce ADiv$Literal1Operator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperator poperatorNode1;
        {
            // Block
        TDiv tdivNode2;
        PValue pvalueNode3;
        tdivNode2 = (TDiv)nodeArrayList1.get(0);
        {
            // Block
        PLiteral pliteralNode4;
        pliteralNode4 = (PLiteral)nodeArrayList2.get(0);

        pvalueNode3 = new ALiteralValue(pliteralNode4);
        }

        poperatorNode1 = new ADivOperator(tdivNode2, pvalueNode3);
        }
	nodeList.add(poperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new112() /* reduce ADiv$Rnd1Operator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperator poperatorNode1;
        {
            // Block
        TDiv tdivNode2;
        PValue pvalueNode3;
        tdivNode2 = (TDiv)nodeArrayList1.get(0);
        {
            // Block
        PRnd prndNode4;
        prndNode4 = (PRnd)nodeArrayList2.get(0);

        pvalueNode3 = new ARndValue(prndNode4);
        }

        poperatorNode1 = new ADivOperator(tdivNode2, pvalueNode3);
        }
	nodeList.add(poperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new113() /* reduce AEqualBoolOperator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBoolOperator pbooloperatorNode1;
        {
            // Block
        TEqual tequalNode2;
        tequalNode2 = (TEqual)nodeArrayList1.get(0);

        pbooloperatorNode1 = new AEqualBoolOperator(tequalNode2);
        }
	nodeList.add(pbooloperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new114() /* reduce ALessEqualBoolOperator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBoolOperator pbooloperatorNode1;
        {
            // Block
        TLessEqual tlessequalNode2;
        tlessequalNode2 = (TLessEqual)nodeArrayList1.get(0);

        pbooloperatorNode1 = new ALessEqualBoolOperator(tlessequalNode2);
        }
	nodeList.add(pbooloperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new115() /* reduce AGreaterEqualBoolOperator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBoolOperator pbooloperatorNode1;
        {
            // Block
        TGreaterEqual tgreaterequalNode2;
        tgreaterequalNode2 = (TGreaterEqual)nodeArrayList1.get(0);

        pbooloperatorNode1 = new AGreaterEqualBoolOperator(tgreaterequalNode2);
        }
	nodeList.add(pbooloperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new116() /* reduce ANegateBoolOperator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBoolOperator pbooloperatorNode1;
        {
            // Block
        TNegate tnegateNode2;
        tnegateNode2 = (TNegate)nodeArrayList1.get(0);

        pbooloperatorNode1 = new ANegateBoolOperator(tnegateNode2);
        }
	nodeList.add(pbooloperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new117() /* reduce AAndBoolOperator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBoolOperator pbooloperatorNode1;
        {
            // Block
        TAnd tandNode2;
        tandNode2 = (TAnd)nodeArrayList1.get(0);

        pbooloperatorNode1 = new AAndBoolOperator(tandNode2);
        }
	nodeList.add(pbooloperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new118() /* reduce AOrBoolOperator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBoolOperator pbooloperatorNode1;
        {
            // Block
        TOr torNode2;
        torNode2 = (TOr)nodeArrayList1.get(0);

        pbooloperatorNode1 = new AOrBoolOperator(torNode2);
        }
	nodeList.add(pbooloperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new119() /* reduce ALessBoolOperator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBoolOperator pbooloperatorNode1;
        {
            // Block
        TLess tlessNode2;
        tlessNode2 = (TLess)nodeArrayList1.get(0);

        pbooloperatorNode1 = new ALessBoolOperator(tlessNode2);
        }
	nodeList.add(pbooloperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new120() /* reduce AGreaterBoolOperator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBoolOperator pbooloperatorNode1;
        {
            // Block
        TGreater tgreaterNode2;
        tgreaterNode2 = (TGreater)nodeArrayList1.get(0);

        pbooloperatorNode1 = new AGreaterBoolOperator(tgreaterNode2);
        }
	nodeList.add(pbooloperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new121() /* reduce AIdentifier1$Identifier2Rnd */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRnd prndNode1;
        {
            // Block
        TRandom trandomNode2;
        TParL tparlNode3;
        PValue pvalueNode4;
        TTo ttoNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        trandomNode2 = (TRandom)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        {
            // Block
        TIdentifier tidentifierNode5;
        tidentifierNode5 = (TIdentifier)nodeArrayList3.get(0);

        pvalueNode4 = new AIdentifierValue(tidentifierNode5);
        }
        ttoNode6 = (TTo)nodeArrayList4.get(0);
        {
            // Block
        TIdentifier tidentifierNode8;
        tidentifierNode8 = (TIdentifier)nodeArrayList5.get(0);

        pvalueNode7 = new AIdentifierValue(tidentifierNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);

        prndNode1 = new ARnd(trandomNode2, tparlNode3, pvalueNode4, ttoNode6, pvalueNode7, tparrNode9);
        }
	nodeList.add(prndNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new122() /* reduce AIdentifier1$Literal2Rnd */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRnd prndNode1;
        {
            // Block
        TRandom trandomNode2;
        TParL tparlNode3;
        PValue pvalueNode4;
        TTo ttoNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        trandomNode2 = (TRandom)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        {
            // Block
        TIdentifier tidentifierNode5;
        tidentifierNode5 = (TIdentifier)nodeArrayList3.get(0);

        pvalueNode4 = new AIdentifierValue(tidentifierNode5);
        }
        ttoNode6 = (TTo)nodeArrayList4.get(0);
        {
            // Block
        PLiteral pliteralNode8;
        pliteralNode8 = (PLiteral)nodeArrayList5.get(0);

        pvalueNode7 = new ALiteralValue(pliteralNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);

        prndNode1 = new ARnd(trandomNode2, tparlNode3, pvalueNode4, ttoNode6, pvalueNode7, tparrNode9);
        }
	nodeList.add(prndNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new123() /* reduce AIdentifier1$Rnd2Rnd */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRnd prndNode1;
        {
            // Block
        TRandom trandomNode2;
        TParL tparlNode3;
        PValue pvalueNode4;
        TTo ttoNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        trandomNode2 = (TRandom)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        {
            // Block
        TIdentifier tidentifierNode5;
        tidentifierNode5 = (TIdentifier)nodeArrayList3.get(0);

        pvalueNode4 = new AIdentifierValue(tidentifierNode5);
        }
        ttoNode6 = (TTo)nodeArrayList4.get(0);
        {
            // Block
        PRnd prndNode8;
        prndNode8 = (PRnd)nodeArrayList5.get(0);

        pvalueNode7 = new ARndValue(prndNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);

        prndNode1 = new ARnd(trandomNode2, tparlNode3, pvalueNode4, ttoNode6, pvalueNode7, tparrNode9);
        }
	nodeList.add(prndNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new124() /* reduce ALiteral1$Identifier2Rnd */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRnd prndNode1;
        {
            // Block
        TRandom trandomNode2;
        TParL tparlNode3;
        PValue pvalueNode4;
        TTo ttoNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        trandomNode2 = (TRandom)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        {
            // Block
        PLiteral pliteralNode5;
        pliteralNode5 = (PLiteral)nodeArrayList3.get(0);

        pvalueNode4 = new ALiteralValue(pliteralNode5);
        }
        ttoNode6 = (TTo)nodeArrayList4.get(0);
        {
            // Block
        TIdentifier tidentifierNode8;
        tidentifierNode8 = (TIdentifier)nodeArrayList5.get(0);

        pvalueNode7 = new AIdentifierValue(tidentifierNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);

        prndNode1 = new ARnd(trandomNode2, tparlNode3, pvalueNode4, ttoNode6, pvalueNode7, tparrNode9);
        }
	nodeList.add(prndNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new125() /* reduce ALiteral1$Literal2Rnd */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRnd prndNode1;
        {
            // Block
        TRandom trandomNode2;
        TParL tparlNode3;
        PValue pvalueNode4;
        TTo ttoNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        trandomNode2 = (TRandom)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        {
            // Block
        PLiteral pliteralNode5;
        pliteralNode5 = (PLiteral)nodeArrayList3.get(0);

        pvalueNode4 = new ALiteralValue(pliteralNode5);
        }
        ttoNode6 = (TTo)nodeArrayList4.get(0);
        {
            // Block
        PLiteral pliteralNode8;
        pliteralNode8 = (PLiteral)nodeArrayList5.get(0);

        pvalueNode7 = new ALiteralValue(pliteralNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);

        prndNode1 = new ARnd(trandomNode2, tparlNode3, pvalueNode4, ttoNode6, pvalueNode7, tparrNode9);
        }
	nodeList.add(prndNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new126() /* reduce ALiteral1$Rnd2Rnd */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRnd prndNode1;
        {
            // Block
        TRandom trandomNode2;
        TParL tparlNode3;
        PValue pvalueNode4;
        TTo ttoNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        trandomNode2 = (TRandom)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        {
            // Block
        PLiteral pliteralNode5;
        pliteralNode5 = (PLiteral)nodeArrayList3.get(0);

        pvalueNode4 = new ALiteralValue(pliteralNode5);
        }
        ttoNode6 = (TTo)nodeArrayList4.get(0);
        {
            // Block
        PRnd prndNode8;
        prndNode8 = (PRnd)nodeArrayList5.get(0);

        pvalueNode7 = new ARndValue(prndNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);

        prndNode1 = new ARnd(trandomNode2, tparlNode3, pvalueNode4, ttoNode6, pvalueNode7, tparrNode9);
        }
	nodeList.add(prndNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new127() /* reduce ARnd1$Identifier2Rnd */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRnd prndNode1;
        {
            // Block
        TRandom trandomNode2;
        TParL tparlNode3;
        PValue pvalueNode4;
        TTo ttoNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        trandomNode2 = (TRandom)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        {
            // Block
        PRnd prndNode5;
        prndNode5 = (PRnd)nodeArrayList3.get(0);

        pvalueNode4 = new ARndValue(prndNode5);
        }
        ttoNode6 = (TTo)nodeArrayList4.get(0);
        {
            // Block
        TIdentifier tidentifierNode8;
        tidentifierNode8 = (TIdentifier)nodeArrayList5.get(0);

        pvalueNode7 = new AIdentifierValue(tidentifierNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);

        prndNode1 = new ARnd(trandomNode2, tparlNode3, pvalueNode4, ttoNode6, pvalueNode7, tparrNode9);
        }
	nodeList.add(prndNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new128() /* reduce ARnd1$Literal2Rnd */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRnd prndNode1;
        {
            // Block
        TRandom trandomNode2;
        TParL tparlNode3;
        PValue pvalueNode4;
        TTo ttoNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        trandomNode2 = (TRandom)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        {
            // Block
        PRnd prndNode5;
        prndNode5 = (PRnd)nodeArrayList3.get(0);

        pvalueNode4 = new ARndValue(prndNode5);
        }
        ttoNode6 = (TTo)nodeArrayList4.get(0);
        {
            // Block
        PLiteral pliteralNode8;
        pliteralNode8 = (PLiteral)nodeArrayList5.get(0);

        pvalueNode7 = new ALiteralValue(pliteralNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);

        prndNode1 = new ARnd(trandomNode2, tparlNode3, pvalueNode4, ttoNode6, pvalueNode7, tparrNode9);
        }
	nodeList.add(prndNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new129() /* reduce ARnd1$Rnd2Rnd */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRnd prndNode1;
        {
            // Block
        TRandom trandomNode2;
        TParL tparlNode3;
        PValue pvalueNode4;
        TTo ttoNode6;
        PValue pvalueNode7;
        TParR tparrNode9;
        trandomNode2 = (TRandom)nodeArrayList1.get(0);
        tparlNode3 = (TParL)nodeArrayList2.get(0);
        {
            // Block
        PRnd prndNode5;
        prndNode5 = (PRnd)nodeArrayList3.get(0);

        pvalueNode4 = new ARndValue(prndNode5);
        }
        ttoNode6 = (TTo)nodeArrayList4.get(0);
        {
            // Block
        PRnd prndNode8;
        prndNode8 = (PRnd)nodeArrayList5.get(0);

        pvalueNode7 = new ARndValue(prndNode8);
        }
        tparrNode9 = (TParR)nodeArrayList6.get(0);

        prndNode1 = new ARnd(trandomNode2, tparlNode3, pvalueNode4, ttoNode6, pvalueNode7, tparrNode9);
        }
	nodeList.add(prndNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new130() /* reduce ABooleanLiteralLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLiteral pliteralNode1;
        {
            // Block
        PBooleanLiteral pbooleanliteralNode2;
        pbooleanliteralNode2 = (PBooleanLiteral)nodeArrayList1.get(0);

        pliteralNode1 = new ABooleanLiteralLiteral(pbooleanliteralNode2);
        }
	nodeList.add(pliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new131() /* reduce AIntegerLiteralLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLiteral pliteralNode1;
        {
            // Block
        TIntegerLiteral tintegerliteralNode2;
        tintegerliteralNode2 = (TIntegerLiteral)nodeArrayList1.get(0);

        pliteralNode1 = new AIntegerLiteralLiteral(tintegerliteralNode2);
        }
	nodeList.add(pliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new132() /* reduce ADoubleLiteralLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLiteral pliteralNode1;
        {
            // Block
        TDoubleLiteral tdoubleliteralNode2;
        tdoubleliteralNode2 = (TDoubleLiteral)nodeArrayList1.get(0);

        pliteralNode1 = new ADoubleLiteralLiteral(tdoubleliteralNode2);
        }
	nodeList.add(pliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new133() /* reduce AStringLiteralLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLiteral pliteralNode1;
        {
            // Block
        TStringLiteral tstringliteralNode2;
        tstringliteralNode2 = (TStringLiteral)nodeArrayList1.get(0);

        pliteralNode1 = new AStringLiteralLiteral(tstringliteralNode2);
        }
	nodeList.add(pliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new134() /* reduce ATrueBooleanLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBooleanLiteral pbooleanliteralNode1;
        {
            // Block
        TTrue ttrueNode2;
        ttrueNode2 = (TTrue)nodeArrayList1.get(0);

        pbooleanliteralNode1 = new ATrueBooleanLiteral(ttrueNode2);
        }
	nodeList.add(pbooleanliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new135() /* reduce AFalseBooleanLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBooleanLiteral pbooleanliteralNode1;
        {
            // Block
        TFalse tfalseNode2;
        tfalseNode2 = (TFalse)nodeArrayList1.get(0);

        pbooleanliteralNode1 = new AFalseBooleanLiteral(tfalseNode2);
        }
	nodeList.add(pbooleanliteralNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 134}, },
			{{-1, REDUCE, 135}, },
			{{-1, ERROR, 3}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 32}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 4}, {5, SHIFT, 35}, },
			{{-1, ERROR, 5}, {5, SHIFT, 36}, {33, SHIFT, 37}, {40, SHIFT, 38}, },
			{{-1, ERROR, 6}, {5, SHIFT, 40}, },
			{{-1, ERROR, 7}, {5, SHIFT, 41}, },
			{{-1, ERROR, 8}, {5, SHIFT, 42}, },
			{{-1, ERROR, 9}, {5, SHIFT, 43}, },
			{{-1, ERROR, 10}, {5, SHIFT, 44}, },
			{{-1, REDUCE, 133}, },
			{{-1, REDUCE, 94}, {16, SHIFT, 45}, },
			{{-1, REDUCE, 132}, },
			{{-1, REDUCE, 131}, },
			{{-1, ERROR, 15}, {49, ACCEPT, -1}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 24}, {12, SHIFT, 47}, {13, SHIFT, 48}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 77}, {4, SHIFT, 49}, {22, SHIFT, 50}, {25, SHIFT, 51}, {26, SHIFT, 52}, },
			{{-1, REDUCE, 79}, {21, SHIFT, 53}, },
			{{-1, REDUCE, 81}, {18, SHIFT, 54}, {19, SHIFT, 55}, {23, SHIFT, 56}, {24, SHIFT, 57}, },
			{{-1, REDUCE, 96}, {16, SHIFT, 58}, },
			{{-1, REDUCE, 95}, {16, SHIFT, 59}, },
			{{-1, REDUCE, 130}, },
			{{-1, ERROR, 32}, {4, SHIFT, 60}, },
			{{-1, ERROR, 33}, {4, SHIFT, 61}, },
			{{-1, ERROR, 34}, {4, SHIFT, 62}, },
			{{-1, ERROR, 35}, {30, SHIFT, 63}, },
			{{-1, ERROR, 36}, {12, SHIFT, 64}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 65}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 37}, {5, SHIFT, 69}, },
			{{-1, ERROR, 38}, {5, SHIFT, 70}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 40}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 71}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 41}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 42}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 78}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 43}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 78}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 44}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 45}, {28, SHIFT, 84}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 47}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 71}, },
			{{-1, ERROR, 49}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 50}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 51}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 52}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 53}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 54}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 91}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 55}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 94}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 56}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 97}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 57}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 100}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 58}, {28, SHIFT, 103}, },
			{{-1, ERROR, 59}, {28, SHIFT, 104}, },
			{{-1, ERROR, 60}, {9, SHIFT, 105}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 61}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 62}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 63}, {31, SHIFT, 109}, },
			{{-1, ERROR, 64}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 110}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 94}, {6, SHIFT, 113}, },
			{{-1, ERROR, 66}, {12, SHIFT, 114}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 115}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 96}, {6, SHIFT, 118}, },
			{{-1, REDUCE, 95}, {6, SHIFT, 119}, },
			{{-1, ERROR, 69}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 70}, {46, SHIFT, 121}, },
			{{-1, ERROR, 71}, {35, SHIFT, 122}, },
			{{-1, ERROR, 72}, {35, SHIFT, 123}, },
			{{-1, ERROR, 73}, {35, SHIFT, 124}, },
			{{-1, REDUCE, 94}, },
			{{-1, ERROR, 75}, {6, SHIFT, 125}, {12, SHIFT, 47}, },
			{{-1, REDUCE, 96}, },
			{{-1, REDUCE, 95}, },
			{{-1, REDUCE, 55}, {0, SHIFT, 126}, },
			{{-1, ERROR, 79}, {6, SHIFT, 127}, {12, SHIFT, 128}, },
			{{-1, REDUCE, 57}, {0, SHIFT, 129}, },
			{{-1, REDUCE, 56}, {0, SHIFT, 130}, },
			{{-1, ERROR, 82}, {6, SHIFT, 131}, {12, SHIFT, 132}, },
			{{-1, ERROR, 83}, {6, SHIFT, 133}, {12, SHIFT, 47}, },
			{{-1, ERROR, 84}, {5, SHIFT, 134}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 78}, {21, SHIFT, 53}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 80}, {18, SHIFT, 54}, {19, SHIFT, 55}, {23, SHIFT, 56}, {24, SHIFT, 57}, },
			{{-1, REDUCE, 88}, },
			{{-1, REDUCE, 90}, },
			{{-1, REDUCE, 89}, },
			{{-1, REDUCE, 91}, },
			{{-1, REDUCE, 93}, },
			{{-1, REDUCE, 92}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 84}, },
			{{-1, REDUCE, 83}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 87}, },
			{{-1, REDUCE, 86}, },
			{{-1, ERROR, 103}, {5, SHIFT, 135}, },
			{{-1, ERROR, 104}, {5, SHIFT, 136}, },
			{{-1, REDUCE, 61}, {12, SHIFT, 137}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 138}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 106}, {12, SHIFT, 47}, {13, SHIFT, 142}, },
			{{-1, ERROR, 107}, {12, SHIFT, 47}, {13, SHIFT, 143}, },
			{{-1, ERROR, 108}, {12, SHIFT, 47}, {13, SHIFT, 144}, },
			{{-1, ERROR, 109}, {46, SHIFT, 145}, },
			{{-1, ERROR, 110}, {6, SHIFT, 146}, },
			{{-1, ERROR, 111}, {6, SHIFT, 147}, },
			{{-1, ERROR, 112}, {6, SHIFT, 148}, },
			{{-1, ERROR, 113}, {7, SHIFT, 149}, },
			{{-1, ERROR, 114}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 150}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 115}, {6, SHIFT, 153}, },
			{{-1, ERROR, 116}, {6, SHIFT, 154}, },
			{{-1, ERROR, 117}, {6, SHIFT, 155}, },
			{{-1, ERROR, 118}, {7, SHIFT, 156}, },
			{{-1, ERROR, 119}, {7, SHIFT, 157}, },
			{{-1, ERROR, 120}, {6, SHIFT, 158}, {12, SHIFT, 47}, },
			{{-1, ERROR, 121}, {41, SHIFT, 159}, },
			{{-1, ERROR, 122}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 160}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 123}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 163}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 124}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 166}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 125}, {7, SHIFT, 169}, },
			{{-1, ERROR, 126}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 78}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 127}, {13, SHIFT, 171}, },
			{{-1, ERROR, 128}, {39, SHIFT, 172}, },
			{{-1, ERROR, 129}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 78}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 130}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 78}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 131}, {13, SHIFT, 175}, },
			{{-1, ERROR, 132}, {39, SHIFT, 176}, },
			{{-1, ERROR, 133}, {7, SHIFT, 177}, },
			{{-1, ERROR, 134}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 178}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 135}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 181}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 136}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 184}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 137}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 187}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 61}, {12, SHIFT, 137}, },
			{{-1, ERROR, 139}, {10, SHIFT, 191}, },
			{{-1, REDUCE, 61}, {12, SHIFT, 137}, },
			{{-1, REDUCE, 61}, {12, SHIFT, 137}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 36}, },
			{{-1, ERROR, 145}, {6, SHIFT, 194}, },
			{{-1, ERROR, 146}, {7, SHIFT, 195}, },
			{{-1, ERROR, 147}, {7, SHIFT, 196}, },
			{{-1, ERROR, 148}, {7, SHIFT, 197}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 94}, {6, SHIFT, 199}, },
			{{-1, REDUCE, 96}, {6, SHIFT, 200}, },
			{{-1, REDUCE, 95}, {6, SHIFT, 201}, },
			{{-1, ERROR, 153}, {7, SHIFT, 202}, },
			{{-1, ERROR, 154}, {7, SHIFT, 203}, },
			{{-1, ERROR, 155}, {7, SHIFT, 204}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 158}, {7, SHIFT, 207}, },
			{{-1, ERROR, 159}, {46, SHIFT, 208}, },
			{{-1, ERROR, 160}, {6, SHIFT, 209}, },
			{{-1, ERROR, 161}, {6, SHIFT, 210}, },
			{{-1, ERROR, 162}, {6, SHIFT, 211}, },
			{{-1, ERROR, 163}, {6, SHIFT, 212}, },
			{{-1, ERROR, 164}, {6, SHIFT, 213}, },
			{{-1, ERROR, 165}, {6, SHIFT, 214}, },
			{{-1, ERROR, 166}, {6, SHIFT, 215}, },
			{{-1, ERROR, 167}, {6, SHIFT, 216}, },
			{{-1, ERROR, 168}, {6, SHIFT, 217}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 52}, },
			{{-1, REDUCE, 44}, },
			{{-1, ERROR, 172}, {31, SHIFT, 219}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 53}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 176}, {31, SHIFT, 220}, },
			{{-1, ERROR, 177}, {44, SHIFT, 221}, },
			{{-1, ERROR, 178}, {6, SHIFT, 223}, },
			{{-1, ERROR, 179}, {6, SHIFT, 224}, },
			{{-1, ERROR, 180}, {6, SHIFT, 225}, },
			{{-1, ERROR, 181}, {6, SHIFT, 226}, },
			{{-1, ERROR, 182}, {6, SHIFT, 227}, },
			{{-1, ERROR, 183}, {6, SHIFT, 228}, },
			{{-1, ERROR, 184}, {6, SHIFT, 229}, },
			{{-1, ERROR, 185}, {6, SHIFT, 230}, },
			{{-1, ERROR, 186}, {6, SHIFT, 231}, },
			{{-1, REDUCE, 61}, {12, SHIFT, 137}, },
			{{-1, REDUCE, 61}, {12, SHIFT, 137}, },
			{{-1, REDUCE, 61}, {12, SHIFT, 137}, },
			{{-1, ERROR, 190}, {10, SHIFT, 235}, },
			{{-1, ERROR, 191}, {13, SHIFT, 236}, },
			{{-1, ERROR, 192}, {10, SHIFT, 237}, },
			{{-1, ERROR, 193}, {10, SHIFT, 238}, },
			{{-1, ERROR, 194}, {7, SHIFT, 239}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 198}, {8, SHIFT, 243}, },
			{{-1, ERROR, 199}, {7, SHIFT, 244}, },
			{{-1, ERROR, 200}, {7, SHIFT, 245}, },
			{{-1, ERROR, 201}, {7, SHIFT, 246}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 205}, {8, SHIFT, 250}, },
			{{-1, ERROR, 206}, {8, SHIFT, 251}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 208}, {6, SHIFT, 253}, },
			{{-1, REDUCE, 121}, },
			{{-1, REDUCE, 123}, },
			{{-1, REDUCE, 122}, },
			{{-1, REDUCE, 127}, },
			{{-1, REDUCE, 129}, },
			{{-1, REDUCE, 128}, },
			{{-1, REDUCE, 124}, },
			{{-1, REDUCE, 126}, },
			{{-1, REDUCE, 125}, },
			{{-1, ERROR, 218}, {8, SHIFT, 254}, },
			{{-1, ERROR, 219}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 255}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 220}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 258}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 221}, {5, SHIFT, 261}, },
			{{-1, ERROR, 222}, {8, SHIFT, 262}, },
			{{-1, ERROR, 223}, {13, SHIFT, 263}, },
			{{-1, ERROR, 224}, {13, SHIFT, 264}, },
			{{-1, ERROR, 225}, {13, SHIFT, 265}, },
			{{-1, ERROR, 226}, {13, SHIFT, 266}, },
			{{-1, ERROR, 227}, {13, SHIFT, 267}, },
			{{-1, ERROR, 228}, {13, SHIFT, 268}, },
			{{-1, ERROR, 229}, {13, SHIFT, 269}, },
			{{-1, ERROR, 230}, {13, SHIFT, 270}, },
			{{-1, ERROR, 231}, {13, SHIFT, 271}, },
			{{-1, REDUCE, 58}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 59}, },
			{{-1, ERROR, 235}, {13, SHIFT, 272}, },
			{{-1, REDUCE, 38}, },
			{{-1, ERROR, 237}, {13, SHIFT, 273}, },
			{{-1, ERROR, 238}, {13, SHIFT, 274}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 240}, {8, SHIFT, 276}, },
			{{-1, ERROR, 241}, {8, SHIFT, 277}, },
			{{-1, ERROR, 242}, {8, SHIFT, 278}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 247}, {8, SHIFT, 282}, },
			{{-1, ERROR, 248}, {8, SHIFT, 283}, },
			{{-1, ERROR, 249}, {8, SHIFT, 284}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 22}, },
			{{-1, ERROR, 252}, {8, SHIFT, 285}, },
			{{-1, ERROR, 253}, {7, SHIFT, 286}, },
			{{-1, REDUCE, 8}, {37, SHIFT, 287}, },
			{{-1, ERROR, 255}, {6, SHIFT, 289}, },
			{{-1, ERROR, 256}, {6, SHIFT, 290}, },
			{{-1, ERROR, 257}, {6, SHIFT, 291}, },
			{{-1, ERROR, 258}, {6, SHIFT, 292}, },
			{{-1, ERROR, 259}, {6, SHIFT, 293}, },
			{{-1, ERROR, 260}, {6, SHIFT, 294}, },
			{{-1, ERROR, 261}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 70}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 275}, {8, SHIFT, 296}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 279}, {8, SHIFT, 297}, },
			{{-1, ERROR, 280}, {8, SHIFT, 298}, },
			{{-1, ERROR, 281}, {8, SHIFT, 299}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 287}, {36, SHIFT, 301}, },
			{{-1, REDUCE, 9}, },
			{{-1, ERROR, 289}, {13, SHIFT, 302}, },
			{{-1, ERROR, 290}, {13, SHIFT, 303}, },
			{{-1, ERROR, 291}, {13, SHIFT, 304}, },
			{{-1, ERROR, 292}, {13, SHIFT, 305}, },
			{{-1, ERROR, 293}, {13, SHIFT, 306}, },
			{{-1, ERROR, 294}, {13, SHIFT, 307}, },
			{{-1, ERROR, 295}, {6, SHIFT, 308}, {12, SHIFT, 47}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {35, SHIFT, 309}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 31}, },
			{{-1, ERROR, 300}, {8, SHIFT, 311}, },
			{{-1, ERROR, 301}, {5, SHIFT, 312}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 50}, },
			{{-1, ERROR, 308}, {7, SHIFT, 313}, },
			{{-1, ERROR, 309}, {6, SHIFT, 314}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 310}, {6, SHIFT, 316}, {12, SHIFT, 47}, },
			{{-1, REDUCE, 33}, },
			{{-1, ERROR, 312}, {14, SHIFT, 1}, {15, SHIFT, 2}, {34, SHIFT, 6}, {45, SHIFT, 11}, {46, SHIFT, 74}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 314}, {7, SHIFT, 319}, },
			{{-1, ERROR, 315}, {6, SHIFT, 320}, {12, SHIFT, 47}, },
			{{-1, ERROR, 316}, {7, SHIFT, 321}, },
			{{-1, ERROR, 317}, {6, SHIFT, 322}, {12, SHIFT, 47}, },
			{{-1, ERROR, 318}, {8, SHIFT, 323}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 320}, {7, SHIFT, 325}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 322}, {7, SHIFT, 327}, },
			{{-1, REDUCE, 11}, {44, SHIFT, 221}, },
			{{-1, ERROR, 324}, {8, SHIFT, 329}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, ERROR, 326}, {8, SHIFT, 331}, },
			{{-1, REDUCE, 1}, {14, SHIFT, 1}, {15, SHIFT, 2}, {27, SHIFT, 3}, {29, SHIFT, 4}, {32, SHIFT, 5}, {34, SHIFT, 6}, {36, SHIFT, 7}, {38, SHIFT, 8}, {42, SHIFT, 9}, {43, SHIFT, 10}, {45, SHIFT, 11}, {46, SHIFT, 12}, {47, SHIFT, 13}, {48, SHIFT, 14}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 12}, {44, SHIFT, 221}, },
			{{-1, ERROR, 330}, {8, SHIFT, 334}, },
			{{-1, REDUCE, 13}, {44, SHIFT, 221}, },
			{{-1, ERROR, 332}, {8, SHIFT, 336}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 14}, {44, SHIFT, 221}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 18}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 15}, {16, 46}, {149, 198}, {156, 205}, {157, 206}, {169, 218}, {195, 240}, {196, 241}, {197, 242}, {202, 247}, {203, 248}, {204, 249}, {207, 252}, {239, 275}, {244, 279}, {245, 280}, {246, 281}, {286, 300}, {313, 318}, {319, 324}, {321, 326}, {325, 330}, {327, 332}, },
			{{-1, 16}, },
			{{-1, 17}, },
			{{-1, 222}, {323, 328}, {329, 333}, {331, 335}, {334, 337}, },
			{{-1, 288}, },
			{{-1, 39}, },
			{{-1, 18}, },
			{{-1, 19}, },
			{{-1, 20}, },
			{{-1, 21}, },
			{{-1, 22}, },
			{{-1, 79}, {43, 82}, {126, 170}, {129, 173}, {130, 174}, },
			{{-1, 139}, {138, 190}, {140, 192}, {141, 193}, {187, 232}, {188, 233}, {189, 234}, },
			{{-1, 23}, },
			{{-1, 24}, {36, 66}, {41, 75}, {44, 83}, {60, 106}, {61, 107}, {62, 108}, {69, 120}, {261, 295}, {295, 310}, {309, 315}, {312, 317}, },
			{{-1, 25}, {47, 85}, {49, 86}, {51, 88}, {52, 89}, {114, 85}, },
			{{-1, 26}, },
			{{-1, 27}, {50, 87}, },
			{{-1, 28}, {53, 90}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, 29}, {3, 33}, {36, 67}, {40, 72}, {41, 76}, {42, 80}, {43, 80}, {44, 76}, {47, 76}, {49, 76}, {50, 76}, {51, 76}, {52, 76}, {53, 76}, {54, 92}, {55, 95}, {56, 98}, {57, 101}, {60, 76}, {61, 76}, {62, 76}, {64, 111}, {66, 116}, {69, 76}, {105, 140}, {114, 151}, {122, 161}, {123, 164}, {124, 167}, {126, 80}, {129, 80}, {130, 80}, {134, 179}, {135, 182}, {136, 185}, {137, 188}, {219, 256}, {220, 259}, {261, 76}, {295, 76}, {309, 76}, {312, 76}, },
			{{-1, 30}, {3, 34}, {36, 68}, {40, 73}, {41, 77}, {42, 81}, {43, 81}, {44, 77}, {47, 77}, {49, 77}, {50, 77}, {51, 77}, {52, 77}, {53, 77}, {54, 93}, {55, 96}, {56, 99}, {57, 102}, {60, 77}, {61, 77}, {62, 77}, {64, 112}, {66, 117}, {69, 77}, {105, 141}, {114, 152}, {122, 162}, {123, 165}, {124, 168}, {126, 81}, {129, 81}, {130, 81}, {134, 180}, {135, 183}, {136, 186}, {137, 189}, {219, 257}, {220, 260}, {261, 77}, {295, 77}, {309, 77}, {312, 77}, },
			{{-1, 31}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'true', 'false', 'new', 'startup', 'repeat', 'random', 'if', 'say', 'think', 'switch', string literal, identifier, double literal, integer literal, EOF",
			"expecting: '+', '=', ')', ']', ',', ';', 'true', 'false', '.', '<=', '>=', '&&', '||', '<', '>', '+=', '-=', 'random', 'to', string literal, identifier, double literal, integer literal",
			"expecting: 'true', 'false', 'random', string literal, identifier, double literal, integer literal",
			"expecting: '('",
			"expecting: '(', 'while', 'foreach'",
			"expecting: '=', ',', ';', '.', '<=', '>=', '&&', '||', '<', '>', '+=', '-='",
			"expecting: EOF",
			"expecting: '}', 'true', 'false', 'new', 'startup', 'repeat', 'random', 'if', 'say', 'think', 'switch', string literal, identifier, double literal, integer literal, EOF",
			"expecting: ',', ';'",
			"expecting: ')', ',', ';', 'true', 'false', 'random', 'to', string literal, identifier, double literal, integer literal",
			"expecting: '=', ')', ',', ';', 'true', 'false', '||', '+=', '-=', 'random', 'to', string literal, identifier, double literal, integer literal",
			"expecting: '=', ')', ',', ';', 'true', 'false', '&&', '||', '+=', '-=', 'random', 'to', string literal, identifier, double literal, integer literal",
			"expecting: '=', ')', ',', ';', 'true', 'false', '<=', '>=', '&&', '||', '<', '>', '+=', '-=', 'random', 'to', string literal, identifier, double literal, integer literal",
			"expecting: '='",
			"expecting: 'fig'",
			"expecting: ',', 'true', 'false', 'random', string literal, identifier, double literal, integer literal",
			"expecting: 'add'",
			"expecting: '}', EOF",
			"expecting: '[', 'true', 'false', 'random', string literal, identifier, double literal, integer literal",
			"expecting: ':'",
			"expecting: '=', ')', ',', 'true', 'false', '<=', '>=', '&&', '||', '<', '>', '+=', '-=', 'random', string literal, identifier, double literal, integer literal",
			"expecting: identifier",
			"expecting: 'to'",
			"expecting: ')', ','",
			"expecting: '+', ')', ','",
			"expecting: ']', ',', 'true', 'false', 'random', string literal, identifier, double literal, integer literal",
			"expecting: ')'",
			"expecting: '{'",
			"expecting: 'in'",
			"expecting: ';'",
			"expecting: 'sec'",
			"expecting: ']', ','",
			"expecting: ']'",
			"expecting: '}', 'true', 'false', 'new', 'startup', 'repeat', 'random', 'if', 'say', 'think', 'switch', string literal, identifier, double literal, integer literal",
			"expecting: 'case'",
			"expecting: '}'",
			"expecting: '}', 'true', 'false', 'new', 'startup', 'repeat', 'random', 'if', 'else', 'say', 'think', 'switch', string literal, identifier, double literal, integer literal, EOF",
			"expecting: 'if'",
			"expecting: ')', ',', 'true', 'false', 'random', 'to', string literal, identifier, double literal, integer literal",
			"expecting: ')', 'true', 'false', 'random', string literal, identifier, double literal, integer literal",
			"expecting: '}', 'case'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 1, 2, 3, 4, 3, 3, 3, 3, 3, 1, 5, 1, 1, 6, 7, 7, 7, 7, 7, 7, 7, 7, 8, 9, 10, 11, 12, 5, 5, 1, 13, 13, 13, 14, 15, 3, 3, 7, 2, 2, 2, 2, 2, 16, 17, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 16, 16, 18, 2, 2, 19, 2, 20, 15, 20, 20, 2, 21, 22, 22, 22, 12, 23, 12, 12, 24, 23, 24, 24, 23, 23, 3, 9, 9, 11, 9, 9, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 3, 3, 25, 8, 8, 8, 21, 26, 26, 26, 27, 2, 26, 26, 26, 27, 27, 23, 28, 2, 2, 2, 27, 2, 29, 30, 2, 2, 29, 30, 27, 2, 2, 2, 2, 31, 32, 31, 31, 7, 7, 7, 26, 27, 27, 27, 33, 20, 20, 20, 27, 27, 27, 33, 33, 27, 21, 26, 26, 26, 26, 26, 26, 26, 26, 26, 33, 23, 7, 19, 23, 23, 7, 19, 34, 26, 26, 26, 26, 26, 26, 26, 26, 26, 31, 31, 31, 32, 29, 32, 32, 27, 33, 33, 33, 35, 27, 27, 27, 33, 33, 33, 35, 35, 33, 26, 1, 1, 1, 1, 1, 1, 1, 1, 1, 35, 2, 2, 3, 35, 29, 29, 29, 29, 29, 29, 29, 29, 29, 32, 32, 32, 29, 7, 29, 29, 33, 35, 35, 35, 7, 33, 33, 33, 35, 35, 35, 7, 7, 35, 27, 36, 26, 26, 26, 26, 26, 26, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 35, 7, 7, 7, 35, 35, 35, 7, 7, 7, 7, 33, 37, 7, 29, 29, 29, 29, 29, 29, 38, 7, 7, 7, 7, 35, 3, 7, 7, 7, 7, 7, 7, 27, 39, 23, 7, 2, 33, 27, 23, 27, 23, 35, 33, 27, 33, 27, 40, 35, 33, 35, 33, 35, 40, 35, 40, 35, 35, 40, 35, 7, 35, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
