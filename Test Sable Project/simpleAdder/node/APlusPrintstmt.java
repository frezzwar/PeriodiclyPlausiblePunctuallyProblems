/* This file was generated by SableCC (http://www.sablecc.org/). */

package simpleAdder.node;

import simpleAdder.analysis.*;

@SuppressWarnings("nls")
public final class APlusPrintstmt extends PPrintstmt
{
    private PValue _value_;
    private TPlus _plus_;
    private PPrintstmt _printstmt_;

    public APlusPrintstmt()
    {
        // Constructor
    }

    public APlusPrintstmt(
        @SuppressWarnings("hiding") PValue _value_,
        @SuppressWarnings("hiding") TPlus _plus_,
        @SuppressWarnings("hiding") PPrintstmt _printstmt_)
    {
        // Constructor
        setValue(_value_);

        setPlus(_plus_);

        setPrintstmt(_printstmt_);

    }

    @Override
    public Object clone()
    {
        return new APlusPrintstmt(
            cloneNode(this._value_),
            cloneNode(this._plus_),
            cloneNode(this._printstmt_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPlusPrintstmt(this);
    }

    public PValue getValue()
    {
        return this._value_;
    }

    public void setValue(PValue node)
    {
        if(this._value_ != null)
        {
            this._value_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._value_ = node;
    }

    public TPlus getPlus()
    {
        return this._plus_;
    }

    public void setPlus(TPlus node)
    {
        if(this._plus_ != null)
        {
            this._plus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._plus_ = node;
    }

    public PPrintstmt getPrintstmt()
    {
        return this._printstmt_;
    }

    public void setPrintstmt(PPrintstmt node)
    {
        if(this._printstmt_ != null)
        {
            this._printstmt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._printstmt_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._value_)
            + toString(this._plus_)
            + toString(this._printstmt_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._value_ == child)
        {
            this._value_ = null;
            return;
        }

        if(this._plus_ == child)
        {
            this._plus_ = null;
            return;
        }

        if(this._printstmt_ == child)
        {
            this._printstmt_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._value_ == oldChild)
        {
            setValue((PValue) newChild);
            return;
        }

        if(this._plus_ == oldChild)
        {
            setPlus((TPlus) newChild);
            return;
        }

        if(this._printstmt_ == oldChild)
        {
            setPrintstmt((PPrintstmt) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
