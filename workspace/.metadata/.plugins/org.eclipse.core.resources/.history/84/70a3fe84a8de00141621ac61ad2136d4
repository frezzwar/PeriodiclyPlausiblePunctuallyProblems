/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiler.node;

import compiler.analysis.*;

@SuppressWarnings("nls")
public final class ADivOpmult extends POpmult
{
    private POpmult _opmult_;
    private TDiv _div_;
    private POpunary _opunary_;

    public ADivOpmult()
    {
        // Constructor
    }

    public ADivOpmult(
        @SuppressWarnings("hiding") POpmult _opmult_,
        @SuppressWarnings("hiding") TDiv _div_,
        @SuppressWarnings("hiding") POpunary _opunary_)
    {
        // Constructor
        setOpmult(_opmult_);

        setDiv(_div_);

        setOpunary(_opunary_);

    }

    @Override
    public Object clone()
    {
        return new ADivOpmult(
            cloneNode(this._opmult_),
            cloneNode(this._div_),
            cloneNode(this._opunary_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADivOpmult(this);
    }

    public POpmult getOpmult()
    {
        return this._opmult_;
    }

    public void setOpmult(POpmult node)
    {
        if(this._opmult_ != null)
        {
            this._opmult_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opmult_ = node;
    }

    public TDiv getDiv()
    {
        return this._div_;
    }

    public void setDiv(TDiv node)
    {
        if(this._div_ != null)
        {
            this._div_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._div_ = node;
    }

    public POpunary getOpunary()
    {
        return this._opunary_;
    }

    public void setOpunary(POpunary node)
    {
        if(this._opunary_ != null)
        {
            this._opunary_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opunary_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._opmult_)
            + toString(this._div_)
            + toString(this._opunary_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._opmult_ == child)
        {
            this._opmult_ = null;
            return;
        }

        if(this._div_ == child)
        {
            this._div_ = null;
            return;
        }

        if(this._opunary_ == child)
        {
            this._opunary_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._opmult_ == oldChild)
        {
            setOpmult((POpmult) newChild);
            return;
        }

        if(this._div_ == oldChild)
        {
            setDiv((TDiv) newChild);
            return;
        }

        if(this._opunary_ == oldChild)
        {
            setOpunary((POpunary) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
